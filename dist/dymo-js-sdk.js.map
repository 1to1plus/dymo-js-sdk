{"mappings":"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","sources":["src/dymo/label/framework/createFramework/__tests__/data/singleLabel.js","src/dymo/label/framework/LabelSetBuilder/index.js","src/dymo/label/framework/LabelSetRecord/index.js","src/settings/index.js","src/dymo/index.js","src/dymo/xml/index.js","src/dymo/uuid/index.js","src/dymo/label/framework/PrinterInfo/index.js","src/dymo/label/framework/AddressBarcodePosition/index.js","src/dymo/label/framework/TapeCutMode/index.js","src/dymo/label/framework/TapePrinterInfo/index.js","src/dymo/label/framework/PrintJob/index.js","src/dymo/label/framework/createFramework/index.js","src/helpers/debug.js","src/dymo/label/framework/chooseEnvironment/index.js","src/DlsWebService/index.js","src/helpers/ajax.js","src/dymo/label/framework/PrintLabel2/index.js","src/dymo/label/framework/getPrinters/index.js","src/dymo/label/framework/createPrintersCollection/index.js","src/dymo/label/framework/OneOffFunctions/index.js","src/dymo/label/framework/LabelWriterPrinterInfo/index.js","src/dymo/label/framework/Label/index.js","src/dymo/label/framework/printLabelAsync/index.js","src/dymo/label/framework/printLabelToNetworkPrinter/index.js","src/dymo/label/framework/DZPrinterInfo/index.js","src/dymo/label/framework/getPrintersAsync/index.js","src/dymo/label/framework/addNetworkPrintersToCollection/index.js","src/helpers/string.js","src/dymo/label/framework/PrintJobStatusInfo/index.js","src/dymo/label/framework/PrintJobStatus/index.js","src/dymo/label/framework/checkEnvironment/index.js","src/dymo/label/framework/FlowDirection/index.js","src/dymo/label/framework/LabelWriterPrintQuality/index.js","src/dymo/label/framework/ILabelSetRecord/index.js","src/dymo/label/framework/ILabel/index.js","src/dymo/label/framework/NetworkPrinter/index.js","src/dymo/label/framework/TapeAlignment/index.js","src/dymo/label/framework/TwinTurboRoll/index.js","src/dymo/label/framework/CheckEnvironmentResult/index.js","src/dymo/label/framework/createLabelWriterPrintParamsXml/index.js","src/dymo/label/framework/NetworkPrinterName/index.js","src/dymo/label/framework/SpecialPrinterLogic/index.js","src/dymo-js-sdk.js"],"sourcesContent":["export const sampleSingleLabel = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<DesktopLabel Version=\"1\">\n    <DYMOLabel Version=\"3\">\n        <Description>DYMO Label</Description>\n        <Orientation>Landscape</Orientation>\n        <LabelName>Address</LabelName>\n        <InitialLength>0</InitialLength>\n        <BorderStyle>SolidLine</BorderStyle>\n        <DYMORect>\n            <DYMOPoint>\n                <X>0.23</X>\n                <Y>0.06</Y>\n            </DYMOPoint>\n            <Size>\n                <Width>3.21</Width>\n                <Height>0.9966666</Height>\n            </Size>\n        </DYMORect>\n        <BorderColor>\n            <SolidColorBrush>\n                <Color A=\"1\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n            </SolidColorBrush>\n        </BorderColor>\n        <BorderThickness>1</BorderThickness>\n        <Show_Border>False</Show_Border>\n        <DynamicLayoutManager>\n            <RotationBehavior>ClearObjects</RotationBehavior>\n            <LabelObjects>\n                <TextObject>\n                    <Name>Line1</Name>\n                    <Brushes>\n                        <BackgroundBrush>\n                            <SolidColorBrush>\n                                <Color A=\"0\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </BackgroundBrush>\n                        <BorderBrush>\n                            <SolidColorBrush>\n                                <Color A=\"1\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </BorderBrush>\n                        <StrokeBrush>\n                            <SolidColorBrush>\n                                <Color A=\"1\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </StrokeBrush>\n                        <FillBrush>\n                            <SolidColorBrush>\n                                <Color A=\"0\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </FillBrush>\n                    </Brushes>\n                    <Rotation>Rotation0</Rotation>\n                    <OutlineThickness>1</OutlineThickness>\n                    <IsOutlined>False</IsOutlined>\n                    <BorderStyle>SolidLine</BorderStyle>\n                    <Margin>\n                        <DYMOThickness Left=\"0\" Top=\"0\" Right=\"0\" Bottom=\"0\" />\n                    </Margin>\n                    <HorizontalAlignment>Center</HorizontalAlignment>\n                    <VerticalAlignment>Middle</VerticalAlignment>\n                    <FitMode>None</FitMode>\n                    <IsVertical>False</IsVertical>\n                    <FormattedText>\n                        <FitMode>None</FitMode>\n                        <HorizontalAlignment>Center</HorizontalAlignment>\n                        <VerticalAlignment>Middle</VerticalAlignment>\n                        <IsVertical>False</IsVertical>\n                        <LineTextSpan>\n                            <TextSpan>\n                                <Text>Line1</Text>\n                                <FontInfo>\n                                    <FontName>Segoe UI</FontName>\n                                    <FontSize>8</FontSize>\n                                    <IsBold>True</IsBold>\n                                    <IsItalic>False</IsItalic>\n                                    <IsUnderline>False</IsUnderline>\n                                    <FontBrush>\n                                        <SolidColorBrush>\n                                            <Color A=\"1\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                                        </SolidColorBrush>\n                                    </FontBrush>\n                                </FontInfo>\n                            </TextSpan>\n                        </LineTextSpan>\n                    </FormattedText>\n                    <ObjectLayout>\n                        <DYMOPoint>\n                            <X>0.23</X>\n                            <Y>0.06</Y>\n                        </DYMOPoint>\n                        <Size>\n                            <Width>3.193756</Width>\n                            <Height>0.1368766</Height>\n                        </Size>\n                    </ObjectLayout>\n                </TextObject>\n                <TextObject>\n                    <Name>Line2</Name>\n                    <Brushes>\n                        <BackgroundBrush>\n                            <SolidColorBrush>\n                                <Color A=\"0\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </BackgroundBrush>\n                        <BorderBrush>\n                            <SolidColorBrush>\n                                <Color A=\"1\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </BorderBrush>\n                        <StrokeBrush>\n                            <SolidColorBrush>\n                                <Color A=\"1\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </StrokeBrush>\n                        <FillBrush>\n                            <SolidColorBrush>\n                                <Color A=\"0\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </FillBrush>\n                    </Brushes>\n                    <Rotation>Rotation0</Rotation>\n                    <OutlineThickness>1</OutlineThickness>\n                    <IsOutlined>False</IsOutlined>\n                    <BorderStyle>SolidLine</BorderStyle>\n                    <Margin>\n                        <DYMOThickness Left=\"0\" Top=\"0\" Right=\"0\" Bottom=\"0\" />\n                    </Margin>\n                    <HorizontalAlignment>Center</HorizontalAlignment>\n                    <VerticalAlignment>Middle</VerticalAlignment>\n                    <FitMode>None</FitMode>\n                    <IsVertical>False</IsVertical>\n                    <FormattedText>\n                        <FitMode>None</FitMode>\n                        <HorizontalAlignment>Center</HorizontalAlignment>\n                        <VerticalAlignment>Middle</VerticalAlignment>\n                        <IsVertical>False</IsVertical>\n                        <LineTextSpan>\n                            <TextSpan>\n                                <Text>Line2</Text>\n                                <FontInfo>\n                                    <FontName>Segoe UI</FontName>\n                                    <FontSize>8</FontSize>\n                                    <IsBold>False</IsBold>\n                                    <IsItalic>False</IsItalic>\n                                    <IsUnderline>False</IsUnderline>\n                                    <FontBrush>\n                                        <SolidColorBrush>\n                                            <Color A=\"1\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                                        </SolidColorBrush>\n                                    </FontBrush>\n                                </FontInfo>\n                            </TextSpan>\n                        </LineTextSpan>\n                    </FormattedText>\n                    <ObjectLayout>\n                        <DYMOPoint>\n                            <X>0.23</X>\n                            <Y>0.1968766</Y>\n                        </DYMOPoint>\n                        <Size>\n                            <Width>3.180007</Width>\n                            <Height>0.1338767</Height>\n                        </Size>\n                    </ObjectLayout>\n                </TextObject>\n                <TextObject>\n                    <Name>Line3</Name>\n                    <Brushes>\n                        <BackgroundBrush>\n                            <SolidColorBrush>\n                                <Color A=\"0\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </BackgroundBrush>\n                        <BorderBrush>\n                            <SolidColorBrush>\n                                <Color A=\"1\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </BorderBrush>\n                        <StrokeBrush>\n                            <SolidColorBrush>\n                                <Color A=\"1\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </StrokeBrush>\n                        <FillBrush>\n                            <SolidColorBrush>\n                                <Color A=\"0\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </FillBrush>\n                    </Brushes>\n                    <Rotation>Rotation0</Rotation>\n                    <OutlineThickness>1</OutlineThickness>\n                    <IsOutlined>False</IsOutlined>\n                    <BorderStyle>SolidLine</BorderStyle>\n                    <Margin>\n                        <DYMOThickness Left=\"0\" Top=\"0\" Right=\"0\" Bottom=\"0\" />\n                    </Margin>\n                    <HorizontalAlignment>Center</HorizontalAlignment>\n                    <VerticalAlignment>Middle</VerticalAlignment>\n                    <FitMode>None</FitMode>\n                    <IsVertical>False</IsVertical>\n                    <FormattedText>\n                        <FitMode>None</FitMode>\n                        <HorizontalAlignment>Center</HorizontalAlignment>\n                        <VerticalAlignment>Middle</VerticalAlignment>\n                        <IsVertical>False</IsVertical>\n                        <LineTextSpan>\n                            <TextSpan>\n                                <Text>Line3</Text>\n                                <FontInfo>\n                                    <FontName>Segoe UI</FontName>\n                                    <FontSize>10</FontSize>\n                                    <IsBold>False</IsBold>\n                                    <IsItalic>False</IsItalic>\n                                    <IsUnderline>False</IsUnderline>\n                                    <FontBrush>\n                                        <SolidColorBrush>\n                                            <Color A=\"1\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                                        </SolidColorBrush>\n                                    </FontBrush>\n                                </FontInfo>\n                            </TextSpan>\n                        </LineTextSpan>\n                    </FormattedText>\n                    <ObjectLayout>\n                        <DYMOPoint>\n                            <X>0.23</X>\n                            <Y>0.7875001</Y>\n                        </DYMOPoint>\n                        <Size>\n                            <Width>3.19878</Width>\n                            <Height>0.2691666</Height>\n                        </Size>\n                    </ObjectLayout>\n                </TextObject>\n                <BarcodeObject>\n                    <Name>ItemCode</Name>\n                    <Brushes>\n                        <BackgroundBrush>\n                            <SolidColorBrush>\n                                <Color A=\"1\" R=\"1\" G=\"1\" B=\"1\"> </Color>\n                            </SolidColorBrush>\n                        </BackgroundBrush>\n                        <BorderBrush>\n                            <SolidColorBrush>\n                                <Color A=\"1\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </BorderBrush>\n                        <StrokeBrush>\n                            <SolidColorBrush>\n                                <Color A=\"1\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </StrokeBrush>\n                        <FillBrush>\n                            <SolidColorBrush>\n                                <Color A=\"1\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </FillBrush>\n                    </Brushes>\n                    <Rotation>Rotation0</Rotation>\n                    <OutlineThickness>1</OutlineThickness>\n                    <IsOutlined>False</IsOutlined>\n                    <BorderStyle>SolidLine</BorderStyle>\n                    <Margin>\n                        <DYMOThickness Left=\"0\" Top=\"0\" Right=\"0\" Bottom=\"0\" />\n                    </Margin>\n                    <BarcodeFormat>Code128B</BarcodeFormat>\n                    <Data>\n                        <MultiDataString>\n                            <DataString>1234</DataString>\n                        </MultiDataString>\n                    </Data>\n                    <HorizontalAlignment>Center</HorizontalAlignment>\n                    <VerticalAlignment>Middle</VerticalAlignment>\n                    <Size>Medium</Size>\n                    <TextPosition>None</TextPosition>\n                    <FontInfo>\n                        <FontName>Arial</FontName>\n                        <FontSize>12</FontSize>\n                        <IsBold>False</IsBold>\n                        <IsItalic>False</IsItalic>\n                        <IsUnderline>False</IsUnderline>\n                        <FontBrush>\n                            <SolidColorBrush>\n                                <Color A=\"1\" R=\"0\" G=\"0\" B=\"0\"> </Color>\n                            </SolidColorBrush>\n                        </FontBrush>\n                    </FontInfo>\n                    <ObjectLayout>\n                        <DYMOPoint>\n                            <X>0.23</X>\n                            <Y>0.3498435</Y>\n                        </DYMOPoint>\n                        <Size>\n                            <Width>3.196882</Width>\n                            <Height>0.5037009</Height>\n                        </Size>\n                    </ObjectLayout>\n                </BarcodeObject>\n            </LabelObjects>\n        </DynamicLayoutManager>\n    </DYMOLabel>\n    <LabelApplication>Blank</LabelApplication>\n    <DataTable>\n        <Columns> </Columns>\n        <Rows> </Rows>\n    </DataTable>\n</DesktopLabel>`;\n","/** LabelSetBuilder class\n // LabelSetBuilder is used to create a label-set to print multiple label in one print job.\n // LabelSet is a collection of records. Each record contains pairs of object name and object text data/content.\n // The data of each record are applied to all correspond objects and for each record one label is printed.\n @constructor\n @export\n */\nimport LabelSetRecord from '../LabelSetRecord';\nimport { TextMarkupTag } from '../../../../settings';\nimport dymo from '../../../index';\n\nclass LabelSetBuilder {\n  constructor () {\n    /**\n     @private\n     */\n    this._records = [];\n    this._recordLength = 0;\n    this.length = 0;\n  }\n\n  /** Returns label set records\n   @export\n   @return {Array.<ILabelSetRecord>}\n   */\n  getRecords () {\n    return this._records;\n  }\n\n  /** Adds a new record to the label-set\n   // Returns created record object\n   @export\n   @return {ILabelSetRecord}\n   */\n  addRecord () {\n    const record = new LabelSetRecord();\n    this._records.push(record);\n    this._recordLength = this._records.length;\n    this.length = this._records.length;\n\n    // noinspection JSValidateTypes\n    return record;\n  }\n\n  /** Converts the builder to a xml string\n   @override\n   */\n  toString () {\n    return LabelSetBuilder.toXml(this._records);\n  }\n\n  /** Convert record objects into xml format defined in LabelSet.xsd\n   // Returned xml can be passed to dymo.label.framework.printLabel() as labelSetXml parameter.\n   // Parameters:\n   //      records - records to convert to xml. records should be array-like object of associative-arrays with object names as keys and object text as values.\n   // Return string contains xml data\n   // Note: this function can be used independent of other LabelSetBuilder methods if records data is generated by other functions\n\n   @export\n   @param {Array.<Object.<string, string>>} records\n   */\n  static toXml(records) {\n    // create xml representation of LabelSet\n    // records is an Array-like object of associative arrays of object name/object value pairs\n\n    const doc = dymo.xml.parse('<LabelSet/>');\n    const root = doc.documentElement;\n\n    for (let i = 0; i < records.length; i++) {\n      const record = records[i];\n\n      const recordElem = doc.createElement('LabelRecord');\n\n      for (const objectName in record) {\n        let objectValue = record[objectName];\n        if (typeof objectValue === 'function') continue;\n\n        objectValue = objectValue.toString();\n\n        const objectElem = doc.createElement('ObjectData');\n        objectElem.setAttribute('Name', objectName);\n\n        if (objectValue.indexOf(TextMarkupTag) == 0) {\n          // parse the markup into xml and insert it as is\n          const markupDoc = dymo.xml.parse(objectValue);\n          objectElem.appendChild(markupDoc.documentElement.cloneNode(true));\n        } else {\n          const textNode = doc.createTextNode(objectValue);\n          objectElem.appendChild(textNode);\n        }\n        recordElem.appendChild(objectElem);\n      }\n\n      root.appendChild(recordElem);\n    }\n\n    return dymo.xml.serialize(doc);\n  }\n}\n\nexport default LabelSetBuilder;\n","import { TextMarkupTag, TextMarkupClosedTag } from '../../../../settings'\n\n/** LabelSetRecord class\n Holds data of one label-set records and provides methods to add data to the record\n\n @constructor\n @private\n @implements {ILabelSetRecord}\n */\nconst LabelSetRecord = function () {};\n\n/** inheritDoc */\nLabelSetRecord.prototype.setTextMarkup = function (objectName, textMarkup) {\n  textMarkup = textMarkup.toString();\n\n  if (textMarkup.indexOf(TextMarkupTag) != 0)\n    textMarkup = TextMarkupTag + textMarkup + TextMarkupClosedTag;\n\n  this[objectName] = textMarkup;\n  return this;\n};\n\n/** inheritDoc */\nLabelSetRecord.prototype.setText = function (objectName, text) {\n  this[objectName] = text;\n  return this;\n};\n\n/** inheritDoc */\nLabelSetRecord.prototype.setBase64Image = function (objectName, base64Image) {\n  this[objectName] = base64Image;\n  return this;\n};\n\nexport default LabelSetRecord;\n","import { get, set } from 'lodash'\n\nexport const settings = {\n  DEBUG: false,\n  DETECT_DOUBLE_ESCAPING: false,\n  TRUSTED_SITE: false,\n  FORCE_NON_DOM_HTML_UNESCAPING: false,\n  ASSUME_MOBILE: false,\n\n  WS_PROTOCOL: 'https://',\n  Port: 41951,\n  Host: '127.0.0.1',\n  WS_START_PORT: 41951,\n  WS_END_PORT: 41960,\n  WS_CHECK_TIMEOUT: 3000,\n  WS_COMMAND_TIMEOUT: 10000,\n  WS_SVC_HOST: '127.0.0.1',\n  WS_SVC_HOST_LEGACY: 'localhost',\n  WS_SVC_PATH: 'DYMO/DLS/Printing',\n\n  BASE_URL: undefined,\n\n  dymo: {\n    label: {\n      framework: {\n        currentFramework: 0,\n\n        trace: false,\n      },\n    },\n  },\n};\n\nexport const printers = [];\nexport const printersObj = {};\n\nexport const constants = {\n  WS_CMD_STATUS: 'StatusConnected',\n  WS_CMD_GET_PRINTERS: 'GetPrinters',\n  WS_CMD_OPEN_LABEL: 'OpenLabelFile',\n  WS_CMD_PRINT_LABEL: 'PrintLabel',\n  WS_CMD_PRINT_LABEL2: 'PrintLabel2',\n  WS_CMD_RENDER_LABEL: 'RenderLabel',\n  WS_CMD_LOAD_IMAGE: 'LoadImageAsPngBase64',\n  WS_CMD_GET_JOB_STATUS: 'GetJobStatus',\n  WS_CMD_IS_550_PRINTER: 'Is550Printer',\n  WS_CMD_GET_CONSUMABLE_INFO_IN_550_PRINTER: 'GetConsumableInfoIn550Printer',\n};\n\nexport const TextMarkupTag = '<TextMarkup>';\nexport const TextMarkupClosedTag = '</TextMarkup>';\n\n/**\n * Map of tags which have predefined values with regard to whitespace.\n * @private {!Object<string, string>}\n * @const\n */\nexport const PREDEFINED_TAG_VALUES_ = { IMG: ' ', BR: '\\n' };\n\n/**\n * Map of tags whose content to ignore when calculating text length.\n * @private {!Object<string, number>}\n * @const\n */\nexport const TAGS_TO_IGNORE_ = {\n  SCRIPT: 1,\n  STYLE: 1,\n  HEAD: 1,\n  IFRAME: 1,\n  OBJECT: 1,\n};\n\n/**\n * Constants for the nodeType attribute in the Node interface.\n *\n * These constants match those specified in the Node interface. These are\n * usually present on the Node object in recent browsers, but not in older\n * browsers (specifically, early IEs) and thus are given here.\n *\n * In some browsers (early IEs), these are not defined on the Node object,\n * so they are provided here.\n *\n * See http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1950641247\n * @enum {number}\n */\nexport const NodeType = {\n  ELEMENT: 1,\n  ATTRIBUTE: 2,\n  TEXT: 3,\n  CDATA_SECTION: 4,\n  ENTITY_REFERENCE: 5,\n  ENTITY: 6,\n  PROCESSING_INSTRUCTION: 7,\n  COMMENT: 8,\n  DOCUMENT: 9,\n  DOCUMENT_TYPE: 10,\n  DOCUMENT_FRAGMENT: 11,\n  NOTATION: 12,\n};\n\n/**\n * Maximum value of #hashCode, exclusive. 2^32.\n * @type {number}\n * @private\n */\nexport const HASHCODE_MAX_ = 0x100000000;\n\n/**\n * The most recent unique ID. |0 is equivalent to Math.floor in this case.\n * @type {number}\n * @private\n */\nexport const uniqueStringCounter_ = (Math.random() * 0x80000000) | 0;\n\n/**\n * Common Unicode string characters.\n * @enum {string}\n */\nexport const Unicode = {\n  NBSP: '\\xa0',\n};\n\n/**\n * Special chars that need to be escaped for quote.\n * @private {!Object<string, string>}\n */\nexport const specialEscapeChars_ = {\n  '\\0': '\\\\0',\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n  '\\x0B': '\\\\x0B', // '\\v' is not supported in JScript\n  '\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n};\n\n/**\n * Character mappings used internally for escapeChar.\n * @private {!Object<string, string>}\n */\nexport const jsEscapeCache_ = {\n  \"'\": \"\\\\'\",\n};\n\n/**\n * Regular expression used for splitting a string into substrings of fractional\n * numbers, integers, and non-numeric characters.\n * @type {RegExp}\n * @private\n */\nexport const numerateCompareRegExp_ = /(\\.\\d+)|(\\d+)|(\\D+)/g;\n\n/**\n * gets the settings fail over to the constants\n * @param {string} key - path in the settings object\n * @param {any} [defaultValue = undefined]\n * @param {boolean} [strict]\n * @return {{DETECT_DOUBLE_ESCAPING: boolean, WS_PROTOCOL: string, WS_START_PORT: number, WS_END_PORT: number, Port: number, Host: string, ASSUME_MOBILE: boolean, DEBUG: boolean, WS_COMMAND_TIMEOUT: number, WS_SVC_HOST: string, TRUSTED_SITE: boolean, dymo: {label: {framework: {trace: boolean, currentFramework: number}}}, WS_SVC_PATH: string, BASE_URL: undefined, FORCE_NON_DOM_HTML_UNESCAPING: boolean, WS_CHECK_TIMEOUT: number, WS_SVC_HOST_LEGACY: string}}\n */\nexport const getSetting = (key = undefined, defaultValue = undefined, strict = false) => {\n  if (!key) {\n    return settings\n  }\n\n  const foundSetting = get(settings, key, undefined);\n\n  if (foundSetting === undefined && !strict) {\n    return get(constants, key, defaultValue);\n  }\n\n  return foundSetting;\n};\n\nexport const setSetting = (key, value) => {\n  return set(settings, key, value);\n};\n\nif (!settings.BASE_URL) {\n  const host = getSetting('Host');\n  const port = getSetting('Port');\n\n  const url = `${getSetting('WS_PROTOCOL') + host}:${port}/${getSetting('WS_SVC_PATH')}/`;\n\n  setSetting('BASE_URL', url);\n}\n\nexport const buildApiUrl = (\n  command,\n  { host = getSetting('Host'), port = getSetting('Port') } = {},\n) => {\n  const url = `${getSetting('WS_PROTOCOL') + host}:${port}/${getSetting('WS_SVC_PATH')}/`;\n\n  return url + command;\n};\n\nexport const addPrinterToCollection = (printer, result) => {\n  const { name: printerName } = printer;\n\n  printers.push(printer);\n  printersObj[printerName] = printer;\n\n  result.push(printer);\n  result.byIndex.push(printer);\n\n  if (printerName.match(/^\\d+$/)) {\n    console.error(\n      `Printer name consisting of numbers only (${printerName}) will break proper array behavior. Consider using \"byIndex\" property for accessing elements by index reliably.`,\n    );\n  }\n  if (printerName === 'length') {\n    console.error('Using \"length\" as printer name overrides Array.length property!');\n  }\n\n  result[printerName] = printer;\n};\n","import xml from './xml';\nimport uuid from './uuid';\nimport PrinterInfo from './label/framework/PrinterInfo';\nimport AddressBarcodePosition from './label/framework/AddressBarcodePosition';\nimport TapeCutMode from './label/framework/TapeCutMode';\nimport TapePrinterInfo from './label/framework/TapePrinterInfo';\nimport PrintJob from './label/framework/PrintJob';\nimport Label from './label/framework/Label';\nimport FlowDirection from './label/framework/FlowDirection';\nimport PrintJobStatusInfo from './label/framework/PrintJobStatusInfo';\nimport LabelWriterPrintQuality from './label/framework/LabelWriterPrintQuality';\nimport LabelWriterPrinterInfo from './label/framework/LabelWriterPrinterInfo';\nimport ILabelSetRecord from './label/framework/ILabelSetRecord';\nimport ILabel from './label/framework/ILabel';\nimport LabelSetBuilder from './label/framework/LabelSetBuilder';\nimport NetworkPrinter from './label/framework/NetworkPrinter';\nimport DZPrinterInfo from './label/framework/DZPrinterInfo';\nimport LabelSetRecord from './label/framework/LabelSetRecord';\nimport TapeAlignment from './label/framework/TapeAlignment';\nimport TwinTurboRoll from './label/framework/TwinTurboRoll';\nimport CheckEnvironmentResult from './label/framework/CheckEnvironmentResult';\nimport createLabelWriterPrintParamsXml from './label/framework/createLabelWriterPrintParamsXml';\nimport NetworkPrinterName from './label/framework/NetworkPrinterName';\nimport {\n  is550Printer,\n  is550PrinterAsync,\n  getConsumableInfoIn550Printer,\n  getConsumableInfoIn550PrinterAsync,\n} from './label/framework/SpecialPrinterLogic';\n\nconst dymo = {\n  xml,\n  uuid,\n  label: {\n    framework: {\n      trace: false,\n\n      PrinterInfo,\n      AddressBarcodePosition,\n      TapeCutMode,\n      TapePrinterInfo,\n      PrintJob,\n      Label,\n      FlowDirection,\n      PrintJobStatusInfo,\n      LabelWriterPrintQuality,\n      LabelWriterPrinterInfo,\n      ILabelSetRecord,\n      ILabel,\n      LabelSetBuilder,\n      NetworkPrinter,\n      NetworkPrinterName,\n      createLabelWriterPrintParamsXml,\n      DZPrinterInfo,\n      LabelSetRecord,\n      TapeAlignment,\n      TwinTurboRoll,\n      CheckEnvironmentResult,\n\n      is550Printer,\n      is550PrinterAsync,\n      getConsumableInfoIn550Printer,\n      getConsumableInfoIn550PrinterAsync,\n    },\n  },\n};\n\nexport default dymo;\n","import { parseString } from 'xml2js'\nimport { DOMParser, XMLSerializer } from '@xmldom/xmldom'\nimport { xml2json } from 'xml-js'\n\nconst xml = {}\n\nexport const xmlToJson = (xmlData) => {\n  let newJson\n\n  parseString(\n    xmlData,\n    function (err, results) {\n      // parsing to json\n      newJson = JSON.stringify(results)\n    },\n    undefined,\n  )\n\n  return newJson\n};\n\n/**\n @param {string} text\n @return {Document}\n */\nxml.parse = function (text) {\n  const parser = new DOMParser()\n  return parser.parseFromString(text, 'application/xml')\n}\n\n/**\n * Serializes an XML document or subtree to string.\n * @param {Document|Element} node The document or the root node of the subtree.\n * @return {string} The serialized XML.\n */\nxml.serialize = function (node) {\n  function fix (node) {\n    try {\n      return node.replaceAll(/<Color (.+)\\/>/g, '<Color $1> </Color>')\n    } catch (e) {}\n\n    return node\n  }\n\n  const test = new XMLSerializer().serializeToString(node)\n  console.log({ test })\n\n  return fix(test)\n};\n\nexport const xmlSerialize = xml.serialize;\n\n// appends a new element to DOM tree as child of parent and set it content to text\n// parent - parent Element\n// tagName - the element's tagName\n// text - the element's content\n// attributes - tag attibutes, specified as an associative-array\n// returns - new added element\n/**\n @param {*} parentElement\n @param {string} tagName\n @param {string=} text\n @param {*=} attributes\n */\nxml.appendElement = function (parentElement, tagName, text, attributes) {\n  const result = parentElement.ownerDocument.createElement(tagName)\n\n  if (text) result.appendChild(\n    parentElement.ownerDocument.createTextNode(text))\n\n  if (attributes) {\n    for (const a in attributes) result.setAttribute(a, attributes[a])\n  }\n\n  parentElement.appendChild(result)\n\n  return result\n};\n\n// returns text content of the element, e.g. for tag <Name>address123</Name>, 'address123' will be returned\n/**\n */\nxml.getElementText = function (elem, defaultValue = '') {\n  if (!elem) {\n    return defaultValue\n  }\n\n  let result = ''\n  for (let i = 0; i < elem.childNodes.length; i++)\n    if (elem.childNodes[i].nodeType == 3)\n      // TEXT_NODE\n      result += elem.childNodes[i].data\n\n  return result\n};\n\n// returns child element of parent with tag name \"elemName\"\nxml.getElement = function (parent, elemName) {\n  const children = parent.getElementsByTagName(elemName)\n  if (children.length > 0) return children[0]\n\n  return undefined\n}\n\n// returns all children elements of parent with tag name \"elemName\"\nxml.getElements = function (parent, elemName) {\n  return parent.getElementsByTagName(elemName)\n}\n\n/**\n * set text content of the elem. Note: all other children of the element will be deleted\n * @param element element to set text\n * @param text string to set\n */\nxml.setElementText = function (element, text) {\n  // first, remove all children...\n  xml.removeAllChildren(element)\n  // ...then add text\n  element.appendChild(element.ownerDocument.createTextNode(text))\n}\n\n// removes all children nodes of the specified node\nxml.removeAllChildren = function (node) {\n  while (node.firstChild) node.removeChild(node.firstChild)\n}\n\nxml.xmlToJson = xmlToJson\n\nexport const convertJsonToXml = async (json) => {\n  return new Promise((resolve) => {\n    let convert\n\n    convert = xml2json(json, { compact: true })\n    resolve(convert)\n  })\n}\n\nexport default xml\n","/*\n * Generate a RFC4122(v4) UUID\n *\n * based on https://github.com/broofa/node-uuid\n */\n\n/**\n @public\n @return {string}\n */\nconst uuid = function () {\n  // Use node.js Buffer class if available, otherwise use the Array class\n  const BufferClass = Array;\n\n  // Buffer used for generating string uuids\n  const _buf = new BufferClass(16);\n\n  // Cache number <-> hex string for octet values\n  const toString = [];\n  const toNumber = {};\n  for (let i = 0; i < 256; i++) {\n    toString[i] = (i + 0x100).toString(16).substr(1).toUpperCase();\n    toNumber[toString[i]] = i;\n  }\n\n  function parse(s) {\n    const buf = new BufferClass(16);\n    let i = 0;\n    const ton = toNumber;\n    s.toUpperCase().replace(/[0-9A-F][0-9A-F]/g, function (octet) {\n      buf[i++] = toNumber[octet];\n    });\n    return buf;\n  }\n\n  function unparse(buf) {\n    const tos = toString;\n    const b = buf;\n    return `${tos[b[0]] + tos[b[1]] + tos[b[2]] + tos[b[3]]}-${tos[b[4]]}${tos[b[5]]}-${tos[b[6]]}${\n      tos[b[7]]\n    }-${tos[b[8]]}${tos[b[9]]}-${tos[b[10]]}${tos[b[11]]}${tos[b[12]]}${tos[b[13]]}${tos[b[14]]}${\n      tos[b[15]]\n    }`;\n  }\n\n  function uuid(fmt, buf, offset) {\n    const b32 = 0x100000000;\n    const ff = 0xff;\n\n    const b = fmt != 'binary' ? _buf : buf || new BufferClass(16);\n    let i = (buf && offset) || 0;\n\n    let r = Math.random() * b32;\n    b[i++] = r & ff;\n    b[i++] = (r >>>= 8) & ff;\n    b[i++] = (r >>>= 8) & ff;\n    b[i++] = (r >>>= 8) & ff;\n    r = Math.random() * b32;\n    b[i++] = r & ff;\n    b[i++] = (r >>>= 8) & ff;\n    b[i++] = ((r >>>= 8) & 0x0f) | 0x40; // See RFC4122 sect. 4.1.3\n    b[i++] = (r >>>= 8) & ff;\n    r = Math.random() * b32;\n    b[i++] = (r & 0x3f) | 0x80; // See RFC4122 sect. 4.4\n    b[i++] = (r >>>= 8) & ff;\n    b[i++] = (r >>>= 8) & ff;\n    b[i++] = (r >>>= 8) & ff;\n    r = Math.random() * b32;\n    b[i++] = r & ff;\n    b[i++] = (r >>>= 8) & ff;\n    b[i++] = (r >>>= 8) & ff;\n    b[i++] = (r >>>= 8) & ff;\n\n    return fmt === undefined ? unparse(b) : b;\n  }\n\n  uuid.parse = parse;\n  uuid.unparse = unparse;\n  uuid.BufferClass = BufferClass;\n\n  return uuid.toString();\n};\n\nexport default uuid;\n","//----------------------------------------------------------------------------\n//\n//  $Id: DYMO.Label.Framework.js 12271 2010-06-16 14:25:34Z vbuzuev $\n//\n// Project -------------------------------------------------------------------\n//\n//  DYMO Label Framework JavaScript Library\n//\n// Content -------------------------------------------------------------------\n//\n//  Main functions\n//\n//----------------------------------------------------------------------------\n//\n//  Copyright (c), 2010, Sanford, L.P. All Rights Reserved.\n//\n//----------------------------------------------------------------------------\n\n/**\n @fileoverview PrinterInfo support\n */\n\n/**\n @public\n @constructor\n @param {string} printerType\n @param {string} name\n @param {string} modelName\n @param {boolean} isConnected\n @param {boolean} isLocal\n */\nconst PrinterInfo = function (printerType, name, modelName, isConnected, isLocal) {\n  this.printerType = printerType;\n  this.name = name;\n  this.modelName = modelName;\n  this.isConnected = isConnected;\n  this.isLocal = isLocal;\n\n  /**\n   internal field to store a printer uri as \"network/mobile/remote\" printer, e.g. uri for DYMO Label lProxy service\n   @public\n   @type {string}\n   */\n  this.printerUri = '';\n\n  /**\n   internal field to store an original printer name as got from network printer\n   @public\n   @type {string}\n   */\n  this.originalPrinterName = '';\n};\n\n/** Determines is the printer local or network\n Local means installed as a Printer on the Desktop machine\n where javascript is executing, e.g. it is a printer available as 'printer' on Windows machine\n 'Network' means a printer installed on a 'proxy' machine or a real network printer (in the future)\n\n @return {boolean}\n */\nPrinterInfo.prototype.isNetworkPrinter = function () {\n  return this.printerUri != '';\n};\n\nexport default PrinterInfo;\n","// TODO :: complete\n\n/** Specifies when to draw Intelligent-Mail barcode for address object\n // AboveAddress - print barcode above the address\n // BelowAddress - print barcode below the address\n // Suppress - don't print barcode as all\n @enum {string}\n @export\n */\nconst AddressBarcodePosition = {}\n/** @export */\nAddressBarcodePosition.AboveAddress = 'AboveAddress'\n/** @export */\nAddressBarcodePosition.BelowAddress = 'BelowAddress'\n/** @export */\nAddressBarcodePosition.Suppress = 'Suppress'\n\nexport default AddressBarcodePosition\n","/** Specifies how tape is cut between label when printing multiple labels on Tape printers.\n // Note: it affects multiple pages print jobs only, if one page job is printed the tape is always cut.\n // AutoCut - cut tape between pages\n // ChainMarks - draw a mark between pages\n @enum {string}\n @export\n */\nconst TapeCutMode = {}\n/** @export */\nTapeCutMode.AutoCut = 'AutoCut'\n/** @export */\nTapeCutMode.ChainMarks = 'ChainMarks'\n\nexport default TapeCutMode\n","import PrinterInfo from '../PrinterInfo'\n\n/**\n @public\n @constructor\n @extends {PrinterInfo}\n @param {string} name\n @param {string} modelName\n @param {boolean} isConnected\n @param {boolean} isLocal\n @param {boolean} isAutoCutSupported\n */\nconst TapePrinterInfo = function (\n  name, modelName, isConnected, isLocal, isAutoCutSupported) {\n  PrinterInfo.call(this, 'TapePrinter', name, modelName, isConnected, isLocal)\n\n  this.isAutoCutSupported = isAutoCutSupported\n}\n\nexport default TapePrinterInfo\n","/**\n Provides 'print job' abstraction\n @public\n @constructor\n @param {PrinterInfo} printerInfo printer the print job has been created for\n @param {string} jobId print job Id\n */\nimport { createFramework } from '../createFramework'\nimport PrintJobStatusInfo from '../PrintJobStatusInfo'\nimport PrintJobStatus from '../PrintJobStatus'\n\nconst PrintJob = function (printerInfo, jobId) {\n  /**\n   @private\n   */\n  this._printerInfo = printerInfo\n\n  /**\n   @private\n   */\n  this._jobId = jobId\n}\n\n/**\n Gets printer name the print job has been created for\n @return {string}\n */\nPrintJob.prototype.getPrinterName = function () {\n  return this._printerInfo.name\n}\n\n/**\n Gets print job id\n @return {string}\n */\nPrintJob.prototype.getJobId = function () {\n  return this._jobId\n}\n\n/**\n Gets a status of the print job\n @public\n @param {function(PrintJobStatusInfo)} replyCallback a function call when the status is available\n @return {undefined}\n */\nPrintJob.prototype.getStatus = function (replyCallback) {\n  if (!this._printerInfo.isNetworkPrinter()) {\n    let statusInfo\n    try {\n      statusInfo = createFramework().\n        getJobStatus(this._printerInfo.name, this._jobId)\n    } catch (e) {\n      statusInfo = new PrintJobStatusInfo(\n        this.getPrinterName(),\n        this._jobId,\n        PrintJobStatus.ProcessingError,\n        e.message || e,\n      )\n    }\n\n    replyCallback(statusInfo)\n  } else this.getStatusForNetworkPrinter(replyCallback)\n};\n\n/**\n Gets a status of the print job\n @private\n @param {function(PrintJobStatusInfo)} replyCallback a function call when the status is available\n */\nPrintJob.prototype.getStatusForNetworkPrinter = function (replyCallback) {\n  const printerName = this.getPrinterName()\n  const jobId = this._jobId\n\n  // let networkPrinterName = splitNetworkPrinterName(printerName);\n\n  // try to get data\n  const { printerUri } = this._printerInfo\n  const jsonp2 = new goog.net.Jsonp(\n    goog.Uri.resolve(printerUri, 'getPrintJobStatus'), 'callback')\n  jsonp2.send(\n    { jobId, printerName: this._printerInfo.originalPrinterName },\n    function (pjs) {\n      const jobStatusInfo = new PrintJobStatusInfo(\n        printerName,\n        jobId,\n        pjs.status,\n        pjs.statusMessage,\n      )\n\n      replyCallback(jobStatusInfo)\n    },\n    function () {\n      const jobStatusInfo = new PrintJobStatusInfo(\n        printerName,\n        jobId,\n        PrintJobStatus.ProcessingError,\n        `Error processing getPrintJobStatus(): Unable to contact \"${printerUri}\"`,\n      )\n\n      replyCallback(jobStatusInfo)\n    },\n  )\n};\n\nexport default PrintJob\n","import { traceMsg } from '../../../../helpers/debug'\n// import checkEnvironment from '../checkEnvironment'\nimport chooseEnvironment from '../chooseEnvironment'\nimport { setSetting } from '../../../../settings'\nimport checkEnvironment from '../checkEnvironment'\n\n/**\n @return {Object} _framework\n */\nexport const createFaultyFramework = function (e) {\n  const error = e ||\n    new Error('DYMO Label Framework Plugin or WebService are not installed')\n  const throwError = function () {\n    throw error\n  }\n  return {\n    getPrinters: throwError,\n    openLabelFile: throwError,\n    printLabel: throwError,\n    printLabel2: throwError,\n    renderLabel: throwError,\n    loadImageAsPngBase64: throwError,\n    getJobStatus: throwError,\n    is550Printer: throwError,\n    getConsumableInfoIn550Printer: throwError,\n\n    getPrintersAsync: throwError,\n    openLabelFileAsync: throwError,\n    printLabelAsync: throwError,\n    printLabel2Async: throwError,\n    renderLabelAsync: throwError,\n    loadImageAsPngBase64Async: throwError,\n    is550PrinterAsync: throwError,\n    getConsumableInfoIn550PrinterAsync: throwError,\n  };\n};\n\n// let _framework\n// let currentFramework\n// let _waitWebService = false\n// let _checkResult = null\n\n/**\n * @constructor\n */\nfunction _createFramework (callBack, checkWebService, framework = undefined) {\n  this.v1 = true\n  this.init = false\n  let _framework = framework\n  let currentFramework\n  let _waitWebService = false\n  let _checkResult = null\n\n  if (_waitWebService) {\n    traceMsg('_createFramework > Error service discovery is in progress. ')\n    throw new Error('DYMO Label Framework service discovery is in progress.')\n  }\n\n  if (_framework) {\n    traceMsg(\n      `_createFramework > returning existing instance of _framework, has callBack: ${!!callBack}`,\n    )\n    callBack && callBack(_checkResult)\n    return _framework\n  }\n\n  if (this && this.constructor == _createFramework) {\n    _waitWebService = true\n\n    const onEnvironmentChecked = function (checkResult) {\n      _checkResult = checkResult\n\n      try {\n        _framework = chooseEnvironment(checkResult)\n        currentFramework = checkResult.isWebServicePresent ? 2 : 1\n        setSetting('dymo.label.framework.currentFramework', currentFramework)\n      } catch (e) {\n        traceMsg(\n          `onEnvironmentChecked > exception e : ${e.description || e.message ||\n          e}`)\n        if (!checkWebService) throw e\n        _framework = createFaultyFramework(e)\n        traceMsg('onEnvironmentChecked > fall back to createFaultyFramework')\n      } finally {\n        _waitWebService = false\n      }\n      callBack && callBack(_checkResult)\n    };\n\n    return (async () => {\n      await checkEnvironment(onEnvironmentChecked, checkWebService)\n      return _framework\n    })()\n  }\n  this.init = true\n  return new _createFramework(callBack, checkWebService)\n}\n\nexport const createFramework = (callBack, checkWebService) =>\n  new _createFramework(callBack, checkWebService)\n// export default new _createFramework\n","import { getSetting } from '../settings'\n\nconst window = {};\n\nexport const traceMsg = (msg, { key = 'general.log', level = 'log' } = {}) => {\n  if (getSetting('dymo.label.framework.trace')) {\n    if (window.console && window.console.log) {\n      console[level](key, msg)\n    }\n  }\n}\n","/**\n type {INativeFramework}\n */\nimport { DlsWebService } from '../../../../DlsWebService'\nimport { traceMsg } from '../../../../helpers/debug'\nimport PrintJobStatusInfo from '../PrintJobStatusInfo'\nimport PrintJobStatus from '../PrintJobStatus'\n\nconst chooseEnvironment = function (envCheckResult) {\n  let _framework\n\n  if (envCheckResult.errorDetails != '') {\n    throw new Error(envCheckResult.errorDetails)\n  }\n\n  // first, trying new cross-platform implementation, then fallback to os-specific implementations\n  traceMsg('chooseEnvironment > WebServicePresent')\n  const svc = new DlsWebService();\n  if (svc) {\n    _framework = {};\n\n    _framework.getPrinters = function () {\n      return svc.getPrinters();\n    };\n\n    _framework.openLabelFile = function (fileName) {\n      return svc.openLabelFile(fileName);\n    };\n\n    _framework.printLabel = function (printerName, printParamsXml, labelXml, labelSetXml) {\n      return svc.printLabel(printerName, printParamsXml, labelXml, labelSetXml);\n    };\n\n    _framework.printLabel2 = function (printerName, printParamsXml, labelXml, labelSetXml) {\n      return svc.printLabel2(printerName, printParamsXml, labelXml, labelSetXml);\n    };\n\n    _framework.renderLabel = function (labelXml, renderParamsXml, printerName) {\n      return svc.renderLabel(labelXml, renderParamsXml, printerName);\n    };\n\n    _framework.loadImageAsPngBase64 = function (imageUri) {\n      return svc.loadImageAsPngBase64(imageUri);\n    };\n\n    _framework.is550Printer = function (printerName) {\n      return svc.is550Printer(printerName);\n    };\n\n    _framework.getConsumableInfoIn550Printer = function (printerName) {\n      return svc.getConsumableInfoIn550Printer(printerName);\n    };\n\n    _framework.getJobStatus = function (printerName, jobId) {\n      const status =\n        typeof svc.getJobStatus === 'function'\n          ? PrintJobStatusInfo.parse(\n            svc.getJobStatus(printerName, parseInt(jobId, 10)))\n          : {\n            status: PrintJobStatus.Unknown,\n            statusMessage: 'not implemented',\n          }\n\n      return new PrintJobStatusInfo(printerName, jobId, status.status,\n        status.statusMessage)\n    };\n\n    _framework.getPrintersAsync = function () {\n      return svc.getPrintersAsync();\n    };\n\n    _framework.openLabelFileAsync = function (fileName) {\n      return svc.openLabelFileAsync(fileName);\n    };\n\n    _framework.printLabelAsync = function (printerName, printParamsXml, labelXml, labelSetXml) {\n      return svc.printLabelAsync(printerName, printParamsXml, labelXml, labelSetXml);\n    };\n\n    _framework.printLabel2Async = function (printerName, printParamsXml, labelXml, labelSetXml) {\n      return svc.printLabel2Async(printerName, printParamsXml, labelXml, labelSetXml);\n    };\n\n    _framework.renderLabelAsync = function (labelXml, renderParamsXml, printerName) {\n      return svc.renderLabelAsync(labelXml, renderParamsXml, printerName);\n    };\n\n    _framework.loadImageAsPngBase64Async = function (imageUri) {\n      return svc.loadImageAsPngBase64Async(imageUri);\n    };\n\n    _framework.is550PrinterAsync = function (printerName) {\n      return svc.is550PrinterAsync(printerName);\n    };\n\n    _framework.getConsumableInfoIn550PrinterAsync = function (printerName) {\n      return svc.getConsumableInfoIn550PrinterAsync(printerName);\n    };\n\n    return _framework;\n  }\n\n  throw new Error(\n    'Cannot establish connection to the web service. Is DYMO Label Framework installed?',\n  );\n};\n\nexport default chooseEnvironment;\n","import { invokeWsCommandAsync, GET, POST } from '../helpers/ajax'\nimport { getSetting } from '../settings'\nimport { lowercaseFirstLetter } from '../helpers/string'\n\n/**\n * @constructor\n */\nexport const DlsWebService = function () {\n  this.getPrinters = async function () {\n    const response  = await  invokeWsCommandAsync(GET, getSetting('WS_CMD_GET_PRINTERS'))\n    const {Printers: _responsePrinters = []} = response || {};\n    const printers = [];\n\n    Object.keys(_responsePrinters).forEach(printerType => {\n      const modelPrinters = _responsePrinters[printerType] || [];\n\n      modelPrinters.forEach(modelPrinter => {\n        const printer = {\n          printerType,\n        };\n\n        Object.keys(modelPrinter).forEach(key => {\n          const newValue = modelPrinter[key][0];\n\n          printer[key] = newValue; // regular mapped keys\n          printer[lowercaseFirstLetter(key)] = newValue; // lowercase mapped keys\n        })\n\n        printers.push(printer);\n      });\n    })\n\n    return printers;\n  }\n\n  this.getJobStatus = function () {\n    return invokeWsCommandAsync(GET, getSetting('WS_CMD_GET_JOB_STATUS'))\n  }\n\n  this.openLabelFile = function (fileName) {\n    return invokeWsCommandAsync(GET, getSetting('WS_CMD_OPEN_LABEL'),\n      { fileName })\n  }\n\n  this.printLabel = function (\n    printerName, printParamsXml, labelXml, labelSetXml) {\n    const stop = 'here'\n    return invokeWsCommandAsync(POST, getSetting('WS_CMD_PRINT_LABEL'), {\n      printerName,\n      printParamsXml,\n      labelXml,\n      labelSetXml,\n    })\n  }\n\n  this.printLabel2 = function (\n    printerName, printParamsXml, labelXml, labelSetXml) {\n    return invokeWsCommandAsync(POST, getSetting('WS_CMD_PRINT_LABEL2'), {\n      printerName,\n      printParamsXml,\n      labelXml,\n      labelSetXml,\n    });\n  };\n\n  this.renderLabel = function (labelXml, renderParamsXml, printerName) {\n    return invokeWsCommandAsync(POST, getSetting('WS_CMD_RENDER_LABEL'), {\n      labelXml,\n      renderParamsXml,\n      printerName,\n    });\n  };\n\n  this.loadImageAsPngBase64 = function (imageUri) {\n    return invokeWsCommandAsync(GET, getSetting('WS_CMD_LOAD_IMAGE'), { imageUri });\n  };\n\n  this.is550Printer = function (printerName) {\n    return invokeWsCommandAsync(GET, getSetting('WS_CMD_IS_550_PRINTER'), { printerName });\n  };\n\n  this.getConsumableInfoIn550Printer = function (printerName) {\n    return invokeWsCommandAsync(GET, getSetting('WS_CMD_GET_CONSUMABLE_INFO_IN_550_PRINTER'), {\n      printerName,\n    });\n  };\n\n  // Async\n  this.getPrintersAsync = function () {\n    return invokeWsCommandAsync(GET, getSetting('WS_CMD_GET_PRINTERS'));\n  };\n\n  this.openLabelFileAsync = function (fileName) {\n    return invokeWsCommandAsync(GET, getSetting('WS_CMD_OPEN_LABEL'), { fileName });\n  };\n\n  this.printLabelAsync = function (printerName, printParamsXml, labelXml, labelSetXml) {\n    return invokeWsCommandAsync(POST, getSetting('WS_CMD_PRINT_LABEL'), {\n      printerName,\n      printParamsXml,\n      labelXml,\n      labelSetXml,\n    });\n  };\n\n  this.printLabel2Async = function (printerName, printParamsXml, labelXml, labelSetXml) {\n    return invokeWsCommandAsync(POST, getSetting('WS_CMD_PRINT_LABEL2'), {\n      printerName,\n      printParamsXml,\n      labelXml,\n      labelSetXml,\n    });\n  };\n\n  this.renderLabelAsync = function (labelXml, renderParamsXml, printerName) {\n    return invokeWsCommandAsync(POST, getSetting('WS_CMD_RENDER_LABEL'), {\n      labelXml,\n      renderParamsXml,\n      printerName,\n    });\n  };\n\n  this.loadImageAsPngBase64Async = function (imageUri) {\n    return invokeWsCommandAsync(GET, getSetting('WS_CMD_LOAD_IMAGE'), { imageUri });\n  };\n\n  this.is550PrinterAsync = function (printerName) {\n    return invokeWsCommandAsync(GET, getSetting('WS_CMD_IS_550_PRINTER'), { printerName });\n  };\n\n  this.getConsumableInfoIn550PrinterAsync = function (printerName) {\n    return invokeWsCommandAsync(GET, getSetting('WS_CMD_GET_CONSUMABLE_INFO_IN_550_PRINTER'), {\n      printerName,\n    });\n  };\n};\n","// noinspection ExceptionCaughtLocallyJS\n\nimport axios from 'axios'\nimport { isNumber } from 'lodash'\nimport qs from 'qs'\nimport { getSetting, buildApiUrl, setSetting } from '../settings'\nimport printLabel2 from '../dymo/label/framework/PrintLabel2'\nimport { xmlToJson } from '../dymo/xml'\n\nexport const GET = 'get'\nexport const POST = 'post'\nexport const PATCH = 'patch'\nexport const PUT = 'put'\nexport const DELETE = 'delete'\nexport const OPTIONS = 'options'\n\nconst apiService = async ({\n  url,\n  method = GET,\n  params = undefined,\n  headers = {},\n  debug = false,\n  timeout = 1000,\n}) => {\n  const writer = (output, force = debug) => {\n    if (force) {\n      console.log('apiService.writer', output)\n    }\n  };\n\n  try {\n    const config = {\n      method,\n      url,\n      [method === GET ? 'params' : 'data']: params,\n      headers,\n      rejectUnauthorized: false,\n      timeout,\n    }\n\n    const { data = undefined, ...others } = await axios(config)\n\n    // if data is a string and starts with < it's probably xml\n    if (data && typeof data === 'string' && data.charAt(0) == '<') {\n      const xmlResponse = xmlToJson(data, {})\n      return JSON.parse(xmlResponse)\n    }\n\n    return data\n  } catch (e) {\n    writer(e);\n\n    throw e;\n  }\n};\n\nexport const setCachedService = (port, host) => {\n  setSetting('Host', host);\n  setSetting('Port', port);\n};\n\nexport const fireAjaxAsync = async (method, command, params, defaultData = {}) => {\n  const WS_PROTOCOL = getSetting('WS_PROTOCOL');\n  const WS_SVC_HOST = getSetting('WS_SVC_HOST');\n  const WS_SVC_PATH = getSetting('WS_SVC_PATH');\n\n  const url = `${WS_PROTOCOL + WS_SVC_HOST}:${getSetting(\n    'WS_START_PORT',\n  )}/${WS_SVC_PATH}/${command}`;\n\n  const { data = defaultData } = await apiService({\n    url,\n    params,\n    method,\n  });\n\n  return data;\n};\n\nexport const ajaxSync = (url, data, method, defaultData = undefined) => {\n  const { data: responseData = defaultData } = apiService({\n    url,\n    params: data,\n    method,\n  });\n\n  return responseData;\n};\n\nexport const getAjaxPromise = (currentPort, host) => {\n  const stop = 'here';\n  const url = buildApiUrl(getSetting('WS_CMD_STATUS'), {\n    currentPort,\n    host,\n  });\n\n  return apiService({\n    url,\n    timeout: getSetting('WS_CHECK_TIMEOUT'),\n  });\n};\n\nexport const _findWebService = async (host, successFindWebService, errorFindWebService) => {\n  const startPort = getSetting('WS_START_PORT');\n  const endPort = getSetting('WS_END_PORT');\n  const ajaxPromises = [];\n\n  for (let i = startPort; i <= endPort; ++i) {\n    ajaxPromises.push(getAjaxPromise(i, host));\n  }\n\n  // using reverse logic: first successful response will result in rejected promise, so it will break .all() loop\n  // and ignore all pending results from other promises.\n  // So 'thenCatch' is called in case of success, and 'then' handler is called in case of failure (no ports found).\n  try {\n    const ports = await Promise.all(ajaxPromises).catch(() => false);\n    errorFindWebService && errorFindWebService()\n\n    let found = false;\n\n    ports.forEach((port) => {\n      if (!found && isNumber(port)) {\n        found = true;\n        setCachedService(port, host);\n        successFindWebService();\n      }\n    });\n\n    if (!found) {\n      throw 'Could not find dymo port'\n    }\n  } catch (e) {\n    errorFindWebService && errorFindWebService(e)\n  }\n};\n\n// Aliases that used to do basically the same thing.\nexport const asyncFindWebService = (onSuccess, onError) =>\n  _findWebService(undefined, onSuccess, onError)\nexport const syncCheckWebService = (onSuccess, onError) =>\n  _findWebService(undefined, onSuccess, onError)\n\nexport const invokeWsCommandAsync = (method, command, params) => {\n  const url = buildApiUrl(command)\n\n  return apiService({\n    url,\n    method,\n    params: params ? qs.stringify(params) : undefined,\n    withCredentials: false,\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  })\n}\n\nexport const printLabelAndPollStatus = (\n  printerName,\n  printParamsXml,\n  labelXml,\n  labelSetXml,\n  statusCallback,\n  pollInterval,\n) => {\n  const printJob = printLabel2(printerName, printParamsXml, labelXml,\n    labelSetXml)\n\n  const statusChecker = async function (pjs) {\n    const callbackResult = statusCallback(printJob, pjs)\n    if (!callbackResult) return\n\n    // schedule more status checking\n    await new Promise((resolve) => {\n      setTimeout(resolve, pollInterval)\n    })\n\n    printJob.getStatus(statusChecker)\n  }\n\n  printJob.getStatus(statusChecker);\n\n  return printJob;\n};\n\nexport default apiService;\n","import { isNil } from 'lodash'\nimport getPrinters from '../getPrinters'\nimport { getSetting } from '../../../../settings'\nimport printLabelToNetworkPrinter from '../printLabelToNetworkPrinter'\nimport PrintJob from '../PrintJob'\nimport getPrintersAsync from '../getPrintersAsync'\nimport { createFramework } from '../createFramework'\n\n/** Prints a label and return a job id\n // printerName - the printer to print on. A list of printers can be obtained by getPrinters()\n // printParamsXml - printing parameters, like number of copies, print quality, etc. See PrintParams.xsd\n // labelXml - label to print\n // labelSetXml - LabelSet to print. LabelSet is used to print multiple labels with same layout but different data, e.g. multiple addresses.\n //               Use LabelSetBuilder to create a LabelSet or construct xml manualy according to LabelSet.xsd\n\n @param {string} printerName the printer to print on. A list of printers can be obtained by getPrinters()\n @param {string} printParamsXml printing parameters, like number of copies, print quality, etc. See PrintParams.xsd\n @param {string} labelXml label to print\n @param {string} labelSetXml\n LabelSet to print. LabelSet is used to print multiple labels with same layout but different data, e.g. multiple addresses.\n Use LabelSetBuilder to create a LabelSet or construct xml manualy according to LabelSet.xsd\n @return {PrintJob} print job\n @export\n */\nconst printLabel2 = function (printerName, printParamsXml, labelXml, labelSetXml) {\n  printParamsXml = printParamsXml || '';\n  labelSetXml = labelSetXml || '';\n  if (typeof labelSetXml !== 'string') labelSetXml = labelSetXml.toString();\n\n  if (typeof labelXml === 'undefined')\n    throw new Error('printLabel2(): labelXml parameter should be specified');\n\n  if (typeof labelXml !== 'string') labelXml = labelXml.toString();\n\n  const printers = getPrinters();\n  const printerInfo = printers[printerName];\n\n  if (!isNil(printerInfo)) {\n    if (getSetting('ASSUME_MOBILE') || printerInfo.isNetworkPrinter())\n      return printLabelToNetworkPrinter(printerInfo, printParamsXml, labelXml, labelSetXml);\n    return new PrintJob(\n      printerInfo,\n      createFramework().\n        printLabel2(printerName, printParamsXml, labelXml, labelSetXml),\n    );\n  }\n  throw new Error(`printLabel(): unknown printer '${printerName}'`);\n};\n\n/** Prints a label and return a job id\n // printerName - the printer to print on. A list of printers can be obtained by getPrinters()\n // printParamsXml - printing parameters, like number of copies, print quality, etc. See PrintParams.xsd\n // labelXml - label to print\n // labelSetXml - LabelSet to print. LabelSet is used to print multiple labels with same layout but different data, e.g. multiple addresses.\n //               Use LabelSetBuilder to create a LabelSet or construct xml manualy according to LabelSet.xsd\n\n @param {string} printerName the printer to print on. A list of printers can be obtained by getPrinters()\n @param {string} printParamsXml printing parameters, like number of copies, print quality, etc. See PrintParams.xsd\n @param {string} labelXml label to print\n @param {string} labelSetXml\n LabelSet to print. LabelSet is used to print multiple labels with same layout but different data, e.g. multiple addresses.\n Use LabelSetBuilder to create a LabelSet or construct xml manualy according to LabelSet.xsd\n @return {goog.Promise} PrintJob print job\n @export\n */\nexport const printLabel2Async = function (printerName, printParamsXml, labelXml, labelSetXml) {\n  printParamsXml = printParamsXml || '';\n  labelSetXml = labelSetXml || '';\n  if (typeof labelSetXml !== 'string') labelSetXml = labelSetXml.toString();\n\n  if (typeof labelXml === 'undefined')\n    throw new Error('printLabel2Async(): labelXml parameter should be specified');\n\n  if (typeof labelXml !== 'string') labelXml = labelXml.toString();\n\n  return getPrintersAsync().then(function (printers) {\n    const printerInfo = printers[printerName];\n\n    if (!isNil(printerInfo)) {\n      if (getSetting('ASSUME_MOBILE') || printerInfo.isNetworkPrinter()) {\n        return printLabelToNetworkPrinter(printerInfo, printParamsXml, labelXml, labelSetXml);\n      }\n      return createFramework().\n        printLabel2Async(printerName, printParamsXml, labelXml, labelSetXml).\n        then(function (result) {\n          return new PrintJob(printerInfo, result)\n        })\n    }\n    throw new Error(`printLabel2Async(): unknown printer '${printerName}'`);\n  });\n};\n\nexport default printLabel2;\n","// returns all printers supported by the DYMO Label Framework\n// printers are returned in array-like object that is an associative-array with printer name as a key as well\n// each printer object has the following properties:\n// printerType - either \"LabelWriterPrinter\" or \"TapePrinter\"\n// name - printer's name (print queue name on Mac)\n// modelName - printer model/driver name\n// isConnected - is printer connected to computer or not. Note: currently properly returned only for local USB-connected printers on Windows\n// isLocal - is printer local USB-connected or shared network printer. Note: currently works on Windows only.\n// isTwinTurbo - is printer \"LabelWriter Twin Turbo\" (has two rolls). Note: the property only defined if printerType is \"LabelWriterPrinter\"\n// isAutoCutSupported - is Auto-Cut feature supported by the printer. Note: the property only defined if printerType is \"TapePrinter\"\n\nimport { getSetting } from '../../../../settings'\nimport createPrintersCollection from '../createPrintersCollection'\nimport { createFramework } from '../createFramework'\nimport { getPrinters as onOffGetPrinters } from '../OneOffFunctions'\nimport addNetworkPrintersToCollection from '../addNetworkPrintersToCollection'\n\n/**\n @export\n @return {Array.<dymo.label.framework.PrinterInfo>}\n */\nconst getPrinters = async () => {\n  let result = createPrintersCollection()\n\n  if (!getSetting('ASSUME_MOBILE')) {\n    // get 'local' printers, if we can\n    try {\n      const printersXml = await createFramework().getPrinters()\n      result = onOffGetPrinters(printersXml)\n    } catch (e) {\n      console.log({ e })\n    }\n  }\n\n  addNetworkPrintersToCollection(result);\n  return result;\n};\n\nexport default getPrinters;\n","/**\n Create printer collection\n @private\n @return {Array}\n */\nconst createPrintersCollection = () => {\n  const result = []\n  result.byIndex = []\n\n  Object.defineProperty(result, 'byIndex', {\n    enumerable: false,\n    value: [],\n  })\n\n  return result\n};\n\nexport default createPrintersCollection\n","// noinspection DuplicatedCode,UnnecessaryLocalVariableJS,JSUnusedLocalSymbols,JSValidateJSDoc\n\nimport { isNil } from 'lodash'\nimport xml from '../../../xml'\nimport { addPrinterToCollection, getSetting } from '../../../../settings'\nimport LabelWriterPrinterInfo from '../LabelWriterPrinterInfo'\nimport Label from '../Label'\nimport printLabel2, { printLabel2Async } from '../PrintLabel2'\nimport printLabelToNetworkPrinter from '../printLabelToNetworkPrinter'\nimport { default as DymoFrameworkGetPrinters } from '../getPrinters'\nimport createPrintersCollection from '../createPrintersCollection'\nimport TapePrinterInfo from '../TapePrinterInfo'\nimport DZPrinterInfo from '../DZPrinterInfo'\nimport getPrintersAsync from '../getPrintersAsync'\nimport { traceMsg } from '../../../../helpers/debug'\nimport { createFramework } from '../createFramework'\nimport { isString, appendUrlPath } from '../../../../helpers/string'\n\n/** filters printers list by specified printer type\n @private\n @param {string} printerType\n @return {Array.<PrinterInfo>}\n */\nfunction getPrintersByType (printerType) {\n  const result = []\n  /** optionalProperty always contains an array or null\n   * @type {?Array}\n   */\n  let printers = DymoFrameworkGetPrinters()\n  printers = printers.byIndex // access array safely\n  for (let i = 0; i < printers.length; i++) {\n    const printer = printers[i]\n    if (!!printer.printerType && printer.printerType ==\n      printerType) result.push(printer)\n  }\n\n  return result\n}\n\n/**\n Adds a network printer/proxy to the library.\n Upon adding a request is made to the printer to get it configuration information\n\n @export\n\n @param {string} printerUri printer uri\n\n @param {string=} opt_location printer location\n\n @param {function(string)=} opt_successCallback A function expecting one\n argument, called when the printer configuration information arrives, with the printer uri.\n\n @param {function(string)=} opt_errorCallback A function expecting one\n argument, called on timeout or other error\n\n @return {undefined}\n */\nexport const addPrinterUri = function (\n  printerUri,\n  opt_location,\n  opt_successCallback,\n  opt_errorCallback,\n) {\n  // check location\n  let location = opt_location || ''\n  if (!isString(location)) location = location.toString()\n\n  const successCallback = function (printersXml) {\n    const printerInfo = new NetworkPrinterInfo(printerUri, location,\n      printersXml)\n    _networkPrinters[printerUri] = printerInfo\n\n    if (opt_successCallback) opt_successCallback(printerUri)\n  }\n\n  let errorCallback = null\n  if (opt_errorCallback)\n    errorCallback = function () {\n      opt_errorCallback(printerUri)\n    }\n\n  const getPrintersUri = appendUrlPath(printerUri, 'getPrinters')\n\n  // noinspection JSCheckFunctionSignatures\n  // TODO :: refactor this to remove goog\n  // const jsonp = new goog.net.Jsonp(getPrintersUri, 'callback')\n  // jsonp.send(null, successCallback, errorCallback)\n};\n\n/**\n @export\n @param {string} printerUri\n @return {undefined}\n */\nexport const removePrinterUri = function (printerUri) {\n  delete _networkPrinters[printerUri]\n  // for (let i = _networkPrinters.length - 1; i >= 0; --i)\n  //    if (_networkPrinters[i].printerUri == printerUri)\n  //        _networkPrinters.remove(i);\n}\n\n/**\n @export\n @return {undefined}\n */\nexport const removeAllPrinterUri = function () {\n  const _networkPrinters = {}\n  // for (let i = _networkPrinters.length - 1; i >= 0; --i)\n  //    if (_networkPrinters[i].printerUri == printerUri)\n  //        _networkPrinters.remove(i);\n}\n\n/**\n parses printers xml and returns appropriate PrinterInfo\n @private\n @return {Array.<PrinterInfo>}\n */\nexport const getPrinters = async (printersXml) => {\n  // TODO: update to use functions from Xml namespace\n  // let getXmlText = function(elem) { return elem.firstChild.data; };\n  // let getChildText = function(elem, child) { return getXmlText(elem.getElementsByTagName(child)[0]); };\n  const getChildText = function (elem, child) {\n    return xml.getElementText(xml.getElement(elem, child))\n  }\n\n  const xmldoc = xml.parse(printersXml)\n  const result = createPrintersCollection()\n  let i\n  let name\n  let modelName\n  let isConnected\n  let isLocal\n  let isTwinTurbo\n  let isAutoCutSupported\n\n  // TODO: update to use XPath\n  // let printers = xmldoc.getElementsByTagName(\"Printers\")[0];\n  const printers = xml.getElement(xmldoc, 'Printers')\n  // let labelWriterPrinters = printers.getElementsByTagName(\"LabelWriterPrinter\");\n  const labelWriterPrinters = xml.getElements(printers, 'LabelWriterPrinter')\n  for (i = 0; i < labelWriterPrinters.length; i++) {\n    // let labelWriterPrinter = {};\n    // labelWriterPrinter.printerType = \"LabelWriterPrinter\";\n    name = getChildText(labelWriterPrinters[i], 'Name')\n    modelName = getChildText(labelWriterPrinters[i], 'ModelName')\n    isConnected = getChildText(labelWriterPrinters[i], 'IsConnected') == 'True'\n    isLocal = getChildText(labelWriterPrinters[i], 'IsLocal') == 'True'\n    isTwinTurbo = getChildText(labelWriterPrinters[i], 'IsTwinTurbo') == 'True'\n\n    const labelWriterPrinterInfo = new LabelWriterPrinterInfo(\n      name,\n      modelName,\n      isConnected,\n      isLocal,\n      isTwinTurbo,\n    )\n    addPrinterToCollection(labelWriterPrinterInfo, result)\n  }\n\n  const tapePrinters = xml.getElements(printers, 'TapePrinter')\n  for (i = 0; i < tapePrinters.length; i++) {\n    name = getChildText(tapePrinters[i], 'Name')\n    modelName = getChildText(tapePrinters[i], 'ModelName')\n    isConnected = getChildText(tapePrinters[i], 'IsConnected') == 'True'\n    isLocal = getChildText(tapePrinters[i], 'IsLocal') == 'True'\n    isAutoCutSupported = getChildText(tapePrinters[i], 'IsAutoCutSupported') ==\n      'True'\n\n    const tapePrinterInfo = new TapePrinterInfo(\n      name,\n      modelName,\n      isConnected,\n      isLocal,\n      isAutoCutSupported,\n    )\n    addPrinterToCollection(tapePrinterInfo, result)\n  }\n\n  // let dzPrinters = printers.getElementsByTagName(\"DZPrinter\");\n  const dzPrinters = xml.getElements(printers, 'DZPrinter')\n  for (i = 0; i < dzPrinters.length; i++) {\n    name = getChildText(dzPrinters[i], 'Name')\n    modelName = getChildText(dzPrinters[i], 'ModelName')\n    isConnected = getChildText(dzPrinters[i], 'IsConnected') == 'True'\n    isLocal = getChildText(dzPrinters[i], 'IsLocal') == 'True'\n    isAutoCutSupported = getChildText(dzPrinters[i], 'IsAutoCutSupported') ==\n      'True'\n\n    const dzPrinterInfo = new DZPrinterInfo(\n      name,\n      modelName,\n      isConnected,\n      isLocal,\n      isAutoCutSupported,\n    )\n    addPrinterToCollection(dzPrinterInfo, result)\n  }\n  return result\n};\n\n/** filters printers list by specified printer type\n @private\n @param {string} printerType\n @return {Array.<PrinterInfo>}\n */\nfunction getPrintersByTypeAsync (printerType) {\n  return getPrintersAsync().then(function (printers) {\n    const result = []\n    printers = printers.byIndex // access array safely\n    for (let i = 0; i < printers.length; i++) {\n      const printer = printers[i]\n      if (!!printer.printerType && printer.printerType ==\n        printerType) result.push(printer)\n    }\n    return result\n  })\n}\n\n/** filters printers list, gets LabelWriter printers only\n @return {Array.<LabelWriterPrinterInfo>}\n @export\n */\nexport const getLabelWriterPrinters = () => {\n  // noinspection JSValidateTypes\n  return getPrintersByType('LabelWriterPrinter')\n}\n\n/** filters printers list, gets tape printers only\n @return {Array.<TapePrinterInfo>}\n @export\n */\nexport const getTapePrinters = () => {\n  // noinspection JSValidateTypes\n  return getPrintersByType('TapePrinter')\n}\n\n/** filters printers list, gets DZ printers only\n @return {Array.<DZPrinterInfo>}\n @export\n */\nexport const getDZPrinters = () => {\n  // noinspection JSValidateTypes\n  return getPrintersByType('DZPrinter')\n}\n\n/** filters printers list, gets LabelWriter printers only\n @return {Array.<LabelWriterPrinterInfo>}\n @export\n */\nexport const getLabelWriterPrintersAsync = () => {\n  // noinspection JSValidateTypes\n  return getPrintersByTypeAsync('LabelWriterPrinter')\n}\n\n/** filters printers list, gets tape printers only\n @return {Array.<TapePrinterInfo>}\n @export\n */\nexport const getTapePrintersAsync = () => {\n  // noinspection JSValidateTypes\n  return getPrintersByTypeAsync('TapePrinter')\n}\n\n/** filters printers list, gets DZ printers only\n @return {Array.<DZPrinterInfo>}\n @export\n */\nexport const getDZPrintersAsync = () => {\n  // noinspection JSValidateTypes\n  return getPrintersByTypeAsync('DZPrinter')\n}\n\n/** loads label content from a file or URL\n There are some considerations should be taken into account before using this function.\n Use it only then there are no other way to load label data, that in most cases should be done using openLabelXml()\n - full file name/url should be specified. The function will not honor relative path's based on document.location.href\n - the fileName can be http:// or file:// urls. On Windows it can be a regular file name, like 'c:\\users\\desktop\\address.label'\n - the content of the label will be loaded synchronously. So if the remote server is down there will be a timeout.\n - any local file can be accessed/tried to be accessed. The function is not limited by any browser restrictions.\n Though only a valid label file (according to label.xsd schema) can be loaded this still can be potential security concern.\n - the URL is not limited to same-site-origin browser policy - any url can be opened\n - the proxy settings are system default settings, not necessary browser settings. TODO: fix it by providing proxy settings params into the library (same as DLS7) or read browser proxy settings (if possible)\n returns Label object provides label manipulation methods\n\n @param {string} fileName\n return {ILabel}\n @export\n */\nexport const openLabelFile = (fileName) => {\n  return new Label(createFramework().openLabelFile(fileName))\n};\n\n/**\n @param {string} fileName\n return {ILabel}\n @export\n */\nexport const openLabelFileAsync = (fileName) => {\n  return createFramework().\n    openLabelFileAsync(fileName).\n    then(function (labelXml) {\n      return new Label(labelXml)\n    })\n}\n\n/** loads label content from xml stream/string\n labelXml - label definition as xml string\n Note: it is a preferable way to load/open label files. Use XMLHttpRequest() or other standard browser methods to get xml string.\n returns Label object\n\n @param {string} labelXml\n return {ILabel}\n @export\n */\nexport const openLabelXml = (labelXml) => {\n  traceMsg(labelXml, { key: 'dymo.label.framework' })\n\n  return new Label(labelXml)\n};\n\n/** Prints a label\n // printerName - the printer to print on. A list of printers can be obtained by getPrinters()\n // printParamsXml - printing parameters, like number of copies, print quality, etc. See PrintParams.xsd\n // labelXml - label to print\n // labelSetXml - LabelSet to print. LabelSet is used to print multiple labels with same layout but different data, e.g. multiple addresses.\n //               Use LabelSetBuilder to create a LabelSet or construct xml manually according to LabelSet.xsd\n\n @param {string} printerName\n @param {string} printParamsXml\n @param {string} labelXml\n @param {string} labelSetXml\n @return {undefined}\n @export\n */\nexport const printLabel = (\n  printerName, printParamsXml, labelXml, labelSetXml) => {\n  printParamsXml = printParamsXml || ''\n  labelSetXml = labelSetXml || ''\n  if (typeof labelSetXml !== 'string') labelSetXml = labelSetXml.toString()\n\n  if (typeof labelXml === 'undefined')\n    throw new Error('printLabel(): labelXml parameter should be specified')\n\n  if (typeof labelXml !== 'string') labelXml = labelXml.toString()\n\n  const printers = DymoFrameworkGetPrinters()\n  const printerInfo = printers[printerName]\n\n  if (!isNil(printerInfo)) {\n    // noinspection JSUnresolvedFunction\n    if (getSetting('ASSUME_MOBILE') || printerInfo.isNetworkPrinter())\n      printLabelToNetworkPrinter(printerInfo, printParamsXml, labelXml,\n        labelSetXml)\n    else createFramework().\n      printLabel(printerInfo.name, printParamsXml, labelXml, labelSetXml)\n  }\n\n  throw new Error(`printLabel(): unknown printer '${printerName}'`)\n};\n\n/** Prints a label and runs status checking in a loop\n\n @param {string} printerName the printer to print on. A list of printers can be obtained by getPrinters()\n @param {string} printParamsXml printing parameters, like number of copies, print quality, etc. See PrintParams.xsd\n @param {string} labelXml label to print\n @param {string} labelSetXml\n LabelSet to print. LabelSet is used to print multiple labels with same layout but different data, e.g. multiple addresses.\n Use LabelSetBuilder to create a LabelSet or construct xml manually according to LabelSet.xsd\n @param {function(PrintJob, PrintJobStatusInfo): boolean} statusCallback\n Function to be called when a print job status is available.\n The function is called with one argument of type PrintJobStatusInfo\n To continue polling the status the function should return true, false otherwise\n @param {number} pollInterval poll interval in milliseconds\n @return {PrintJob}\n @export\n */\nexport const printLabelAndPollStatus = (\n  printerName,\n  printParamsXml,\n  labelXml,\n  labelSetXml,\n  statusCallback,\n  pollInterval,\n) => {\n  const printJob = printLabel2(printerName, printParamsXml, labelXml,\n    labelSetXml)\n\n  const statusChecker = async function (pjs) {\n    // noinspection JSCheckFunctionSignatures\n    const callbackResult = statusCallback(printJob, pjs)\n    if (!callbackResult) return\n\n    // schedule more status checking\n    await new Promise((resolve) => {\n      setTimeout(resolve, pollInterval)\n    })\n\n    printJob.getStatus(statusChecker)\n  }\n\n  printJob.getStatus(statusChecker)\n\n  // noinspection JSValidateTypes\n  return printJob\n};\n/** Prints a label and runs status checking in a loop\n\n @param {string} printerName the printer to print on. A list of printers can be obtained by getPrinters()\n @param {string} printParamsXml printing parameters, like number of copies, print quality, etc. See PrintParams.xsd\n @param {string} labelXml label to print\n @param {string} labelSetXml\n LabelSet to print. LabelSet is used to print multiple labels with same layout but different data, e.g. multiple addresses.\n Use LabelSetBuilder to create a LabelSet or construct xml manually according to LabelSet.xsd\n @param {function(PrintJob, PrintJobStatusInfo): boolean} statusCallback\n Function to be called when a print job status is available.\n The function is called with one argument of type PrintJobStatusInfo\n To continue polling the status the function should return true, false otherwise\n @param {number} pollInterval poll interval in milliseconds\n @return {goog.Promise} PrintJob print job\n @export\n */\nexport const printLabelAndPollStatusAsync = (\n  printerName,\n  printParamsXml,\n  labelXml,\n  labelSetXml,\n  statusCallback,\n  pollInterval,\n) => {\n  return printLabel2Async(printerName, printParamsXml, labelXml, labelSetXml).\n    then(function (\n      printJob,\n    ) {\n      const statusChecker = async function (pjs) {\n        const callbackResult = statusCallback(printJob, pjs)\n        if (!callbackResult) return\n\n        // schedule more status checking\n        await new Promise((resolve) => {\n          setTimeout(resolve, pollInterval)\n        })\n\n        printJob.getStatus(statusChecker)\n      }\n\n      printJob.getStatus(statusChecker)\n\n      return printJob\n    })\n};\n\n/** Creates a label bitmap image can be used for label previewing\n Params:\n - labelXml - label to preview\n - renderParamsXml - rendering parameters, like shadow depth, label color, etc. See LabelRenderParams.xsd\n - printerName - printer name the preview is generated for. The preview/output cna be different on different printers,\n especially on tape printers with different print head size.\n An empty string can be passed if it does not matter or important on which printer the label will be printed.\n In this case a default printer metrics will be used that is LW400 for LabelWriter printers and LW400 DUO Tape for tape printers\n\n @param {string} labelXml\n @param {string} renderParamsXml\n @param {string} printerName\n @return {string}\n @export\n */\nexport const renderLabel = (labelXml, renderParamsXml, printerName) => {\n  if (typeof labelXml === 'undefined')\n    throw new Error('renderLabel(): labelXml parameter should be specified')\n\n  if (typeof labelXml !== 'string') labelXml = labelXml.toString()\n\n  renderParamsXml = renderParamsXml || ''\n  printerName = printerName || ''\n\n  return createFramework().renderLabel(labelXml, renderParamsXml, printerName)\n};\n\n/** Creates a label bitmap image can be used for label previewing\n Params:\n - labelXml - label to preview\n - renderParamsXml - rendering parameters, like shadow depth, label color, etc. See LabelRenderParams.xsd\n - printerName - printer name the preview is generated for. The preview/output cna be different on different printers,\n especially on tape printers with different print head size.\n An empty string can be passed if it does not matter or important on which printer the label will be printed.\n In this case a default printer metrics will be used that is LW400 for LabelWriter printers and LW400 DUO Tape for tape printers\n\n @param {string} labelXml\n @param {string} renderParamsXml\n @param {string} printerName\n @return {string}\n @export\n */\nexport const renderLabelAsync = (labelXml, renderParamsXml, printerName) => {\n  if (typeof labelXml === 'undefined') {\n    throw new Error(\n      'renderLabelAsync(): labelXml parameter should be specified')\n  }\n\n  if (typeof labelXml !== 'string') labelXml = labelXml.toString()\n\n  renderParamsXml = renderParamsXml || ''\n  printerName = printerName || ''\n\n  return createFramework().\n    renderLabelAsync(labelXml, renderParamsXml, printerName)\n};\n\n/** Utility function to create a render label request object\n @param {string} requestId\n @param {string} statusId\n @param {string} statusMessage\n @param {string} imageData\n\n @return {Object}\n */\nexport const createRenderLabelRequest = (\n  requestId, statusId, statusMessage, imageData) => {\n  const result = {}\n  result.requestId = requestId\n  result.imageData = imageData\n  result.statusId = statusId\n  result.statusMessage = statusMessage\n\n  return result\n}\n\n/** Creates a xml stream suitable to pass to printLabel() function as printParamsXml parameter\n // Created printing parameters are for printing on Tape printers\n // Parameters:\n // - params - an JavaScript object with following properties (not all properties have to be defined, if a property is not defined a default value will be used)\n //      params.copies - number of copies to print\n //      params.jobTitle - print job title/description\n //      params.flowDirection - prints label content as left-to-right or right-to-left use FlowDirection enum to specify values\n //      params.alignment - label alignment. One of 'Left', 'Center', or 'Right'\n //      params.cutMode - cut mode if auto-cut is supported by the printer. One of 'AutoCut' or 'ChainMarks'\n\n @param {TapePrintParams} params\n @return {string}\n @export\n\n */\nexport const createTapePrintParamsXml = (params) => {\n  if (!params) return ''\n\n  const doc = xml.parse('<TapePrintParams/>')\n  const root = doc.documentElement\n\n  const {\n    copies = false,\n    jobTitle = false,\n    flowDirection = false,\n    alignment = false,\n    cutMode = false,\n  } = params || {}\n\n  if (copies) {\n    xml.appendElement(root, 'Copies', copies.toString())\n  }\n\n  if (jobTitle) {\n    xml.appendElement(root, 'JobTitle', jobTitle)\n  }\n\n  if (flowDirection) {\n    xml.appendElement(root, 'FlowDirection', flowDirection)\n  }\n\n  if (alignment) {\n    xml.appendElement(root, 'Alignment', alignment)\n  }\n\n  if (cutMode) {\n    xml.appendElement(root, 'CutMode', cutMode)\n  }\n\n  return xml.serialize(doc)\n};\n","import PrinterInfo from '../PrinterInfo'\n\n/**\n @public\n @constructor\n @extends {PrinterInfo}\n @param {string} name\n @param {string} modelName\n @param {boolean} isConnected\n @param {boolean} isLocal\n @param {boolean} isTwinTurbo\n */\nconst LabelWriterPrinterInfo = function (\n  name, modelName, isConnected, isLocal, isTwinTurbo) {\n  PrinterInfo.call(this, 'LabelWriterPrinter', name, modelName, isConnected,\n    isLocal)\n\n  this.isTwinTurbo = isTwinTurbo\n}\n\nexport default LabelWriterPrinterInfo\n","// noinspection HtmlDeprecatedTag,HtmlUnknownAttribute\n\nimport xml from '../../../xml';\nimport {\n  renderLabel,\n  renderLabelAsync,\n  printLabel,\n  printLabelAndPollStatus,\n  printLabelAndPollStatusAsync,\n} from '../OneOffFunctions';\nimport printLabelAsync from '../printLabelAsync';\nimport printLabel2, { printLabel2Async } from '../PrintLabel2';\nimport AddressBarcodePosition from '../AddressBarcodePosition';\n\n/**\n @private\n @constructor\n @implements {ILabel}\n @param {string} labelXml\n */\nconst Label = function (labelXml) {\n  /**\n   @private\n   */\n  this._doc = xml.parse(labelXml);\n};\n\n/**\n @inheritDoc\n */\nLabel.prototype.getLabelXml = function () {\n  return xml.serialize(this._doc);\n};\n\n/**\n @inheritDoc\n */\nLabel.prototype.render = function (renderParamsXml, printerName) {\n  return renderLabel(this.getLabelXml(), renderParamsXml, printerName);\n};\n\n/**\n @inheritDoc\n */\nLabel.prototype.renderAsync = function (renderParamsXml, printerName) {\n  return renderLabelAsync(this.getLabelXml(), renderParamsXml, printerName);\n};\n\n/**\n @inheritDoc\n */\nLabel.prototype.print = function (printerName, printParamsXml, labelSetXml) {\n  printLabel(printerName, printParamsXml, this.getLabelXml(), labelSetXml);\n};\n\n/**\n @inheritDoc\n */\nLabel.prototype.printAsync = function (printerName, printParamsXml, labelSetXml) {\n  // noinspection JSValidateTypes\n  return printLabelAsync(printerName, printParamsXml, this.getLabelXml(), labelSetXml);\n};\n\n// noinspection JSCheckFunctionSignatures\nLabel.prototype.print2 = function (printerName, printParamsXml, labelSetXml) {\n  return printLabel2(printerName, printParamsXml, this.getLabelXml(), labelSetXml);\n};\n\n/**\n @inheritDoc\n */\nLabel.prototype.print2Async = function (printerName, printParamsXml, labelSetXml) {\n  return printLabel2Async(printerName, printParamsXml, this.getLabelXml(), labelSetXml);\n};\n\n/**\n @inheritDoc\n */\nLabel.prototype.printAndPollStatus = function (\n  printerName,\n  printParamsXml,\n  labelSetXml,\n  statusCallback,\n  pollInterval,\n) {\n  return printLabelAndPollStatus(\n    printerName,\n    printParamsXml,\n    this.getLabelXml(),\n    labelSetXml,\n    statusCallback,\n    pollInterval,\n  );\n};\n\n/**\n @inheritDoc\n */\nLabel.prototype.printAndPollStatusAsync = function (\n  printerName,\n  printParamsXml,\n  labelSetXml,\n  statusCallback,\n  pollInterval,\n) {\n  return printLabelAndPollStatusAsync(\n    printerName,\n    printParamsXml,\n    this.getLabelXml(),\n    labelSetXml,\n    statusCallback,\n    pollInterval,\n  );\n};\n\nconst _allObjectTypes = [\n  'AddressObject',\n  'TextObject',\n  'BarcodeObject',\n  'ShapeObject',\n  'CounterObject',\n  'ImageObject',\n  'CircularTextObject',\n  'DateTimeObject',\n  'QRCodeObject',\n];\n\n/** returns all object elements on the label\n @private\n @param {Array.<string>=} opt_objectTypes optional array of object types to look for\n @return {(NodeList,Array.<Node>)}\n */\nLabel.prototype._getObjectElements = function (opt_objectTypes) {\n  const objectTypes = opt_objectTypes || _allObjectTypes;\n  // return xml.getNodes(this._doc.documentElement, \"//\" + objectTypes.join(\"|//\"));\n  // let dh = new goog.dom.DomHelper(this._doc);\n\n  // goog.array.reduce(objectTypes,\n  return goog.dom.findNodes(this._doc.documentElement, function (n) {\n    return (\n      n.nodeType == goog.dom.NodeType.ELEMENT && goog.array.indexOf(objectTypes, n.tagName) >= 0\n    );\n  });\n};\n\n/**\n @inheritDoc\n @return {Array.<string>}\n */\nLabel.prototype.getObjectNames = function () {\n  const objects = this._getObjectElements();\n  const result = [];\n  for (let i = 0; i < objects.length; i++)\n    // result.push(xml.getElementText(xml.getNode(objects[i], \"Name\")));\n    result.push(xml.getElementText(xml.getElement(objects[i], 'Name')));\n\n  return result;\n};\n\n/**\n returns all AddressObject elements\n @private\n @return {(NodeList,Array.<Node>)}\n */\nLabel.prototype._getAddressObjectElements = function () {\n  // return xml.getNodes(this._doc, \"//AddressObject\");\n  return this._getObjectElements(['AddressObject']);\n};\n\n/**\n @inheritDoc\n */\nLabel.prototype.getAddressObjectCount = function () {\n  return this._getAddressObjectElements().length;\n};\n\n/**\n returns address object element by index\n @param {number} addressIndex\n @return {Element}\n @private\n */\nLabel.prototype._getAddressObjectElementByIndex = function (addressIndex) {\n  return this._getAddressObjectElements()[addressIndex];\n  // TODO: add manual index checking ???\n\n  //            let addressElements = _getAddressObjectElements();\n  //            if (addressIndex < 0 || addressIndex >= addressElements.length)\n  //                throw new Error(\"getAddressBarcodePosition(): index out of bounds\");\n\n  //            let elem = addressElements[addressIndex];\n};\n\n/**\n @inheritDoc\n */\nLabel.prototype.getAddressBarcodePosition = function (addressIndex) {\n  if (!this.isDCDLabel())\n    return xml.getElementText(\n      xml.getElement(this._getAddressObjectElementByIndex(addressIndex), 'BarcodePosition'),\n    );\n  return '';\n};\n\n/** check the value of passed barcodePosition string to be a valid position value\n // TODO: create universal _verifyEnum() (using for/in); check all values for all defined enums\n // TODO: check other values as well ???\n\n @private\n @param {string} barcodePosition\n @return {undefined}\n */\nLabel.prototype._verifyAddressBarcodePosition = function (barcodePosition) {\n  if (\n    barcodePosition == AddressBarcodePosition.AboveAddress ||\n    barcodePosition == AddressBarcodePosition.BelowAddress ||\n    barcodePosition == AddressBarcodePosition.Suppress\n  )\n    return;\n\n  throw new Error(\n    `verifyAddressBarcodePosition(): barcode position '${barcodePosition}' is invalid value`,\n  );\n};\n\n/**\n @inheritDoc\n */\nLabel.prototype.setAddressBarcodePosition = function (addressIndex, barcodePosition) {\n  if (!this.isDCDLabel()) {\n    this._verifyAddressBarcodePosition(barcodePosition);\n\n    xml.setElementText(\n      xml.getElement(this._getAddressObjectElementByIndex(addressIndex), 'BarcodePosition'),\n      barcodePosition,\n    );\n  }\n  return this;\n};\n\n/**\n @inheritDoc\n */\nLabel.prototype.getAddressText = function (addressIndex) {\n  return this._getAddressObjectText(this._getAddressObjectElementByIndex(addressIndex));\n};\n\n/**\n @inheritDoc\n */\nLabel.prototype.setAddressText = function (addressIndex, text) {\n  return this._setAddressObjectText(this._getAddressObjectElementByIndex(addressIndex), text);\n};\n\n/** returns xml Element of corresponded label object with name objectName\n @private\n @param {string} objectName\n @return {Element}\n */\nLabel.prototype._getObjectByNameElement = function (objectName) {\n  const objects = this._getObjectElements();\n\n  // find object with name\n  for (let i = 0; i < objects.length; i++) {\n    const elem = objects[i];\n    const name = xml.getElementText(xml.getElement(elem, 'Name'));\n    if (name == objectName) return elem;\n  }\n\n  throw new Error(`getObjectByNameElement(): no object with name '${objectName}' was found`);\n};\n\n/** check if the current xml is a DYMO label\n // DYMO label or DieCutLabel\n\n @inheritDoc\n */\nLabel.prototype.isDCDLabel = function () {\n  let result = false;\n  /** optionalProperty always contains an array or null\n   * @type {string}\n   */\n  const labelXML = this.getLabelXml();\n  if (labelXML) {\n    result = labelXML.indexOf('</DYMO label>') !== -1;\n  }\n  return result;\n};\n\n/** check if the current xml is a DYMO label\n // DYMO label or DieCutLabel\n\n @inheritDoc\n */\nLabel.prototype.isDLSLabel = function () {\n  let result = false;\n  /** optionalProperty always contains an array or null\n   * @type {string}\n   */\n  const labelXML = this.getLabelXml();\n  if (labelXML) {\n    result =\n      labelXML.indexOf('</DieCutLabel>') !== -1 || labelXML.indexOf('</ContinuousLabel>') !== -1;\n  }\n  return result;\n};\n\n/** check if the current xml is a valid label\n // DYMO label or DieCutLabel\n\n @inheritDoc\n */\nLabel.prototype.isValidLabel = function () {\n  return this.isDCDLabel() || this.isDLSLabel();\n};\n\n/** extracts text content of an Address object represented by xml element objectElem\n // the same function used to get Text object content\n\n @private\n @param {Element} objectElem\n */\nLabel.prototype._getAddressObjectText = function (objectElem) {\n  // let textElems = xml.getNodes(objectElem, \"StyledText/Element/String//text()\");\n  // let result = \"\";\n  // for (let i = 0; i < textElems.length; i++)\n  //    result = result + textElems[i].data;\n  // return result;\n  let result = '';\n\n  if (!this.isDCDLabel()) {\n    const styledTextElem = xml.getElement(objectElem, 'StyledText');\n    const stringElems = xml.getElements(styledTextElem, 'String');\n\n    result = goog.array.reduce(\n      stringElems,\n      function (acc, v) {\n        return acc + xml.getElementText(v);\n      },\n      '',\n    );\n  } else {\n    const FormattedText = xml.getElement(objectElem, 'FormattedText');\n    const LineTextSpans = xml.getElements(FormattedText, 'LineTextSpan');\n    for (let i = 0; i < LineTextSpans.length; i++) {\n      const Spans = xml.getElements(LineTextSpans[i], 'TextSpan');\n      for (let k = 0; k < Spans.length; k++) {\n        const text = xml.getElement(Spans[k], 'Text');\n        result += xml.getElementText(text);\n      }\n    }\n  }\n  return result;\n};\n\n/** extracts text content of a Barcode object represented by xml element objectElem\n // the same function used to get Text object content\n\n @private\n @param {Element} objectElem\n */\nLabel.prototype._getBarcodeObjectText = function (objectElem) {\n  let result = '';\n  const nodeName = this.isDCDLabel() ? 'Data' : 'Text';\n  const nodeElem = xml.getElement(objectElem, nodeName);\n\n  if (nodeElem) result = xml.getElementText(nodeElem);\n\n  return result;\n};\n\n/** extracts text content of a QR code object represented by xml element objectElem\n // the same function used to get Text object content\n\n @private\n @param {Element} objectElem\n */\nLabel.prototype._getQRcodeObjectText = function (objectElem) {\n  let result = '';\n  if (this.isDCDLabel()) {\n    const nodeElem = xml.getElement(objectElem, 'Data');\n    if (nodeElem) {\n      const dataString = xml.getElement(nodeElem, 'DataString');\n      result = xml.getElementText(dataString);\n    }\n  }\n  return result;\n};\n/** extracts text content of an Image object represented by xml element objectElem\n // if image is embedded return it (base64 png stream)\n\n @private\n @param {Element} objectElem\n */\nLabel.prototype._getImageObjectText = function (objectElem) {\n  let result = '';\n  const nodeName = this.isDCDLabel() ? 'Data' : 'Image';\n  const nodeElem = xml.getElement(objectElem, nodeName);\n\n  if (nodeElem) result = xml.getElementText(nodeElem);\n\n  return result;\n};\n\n/** extracts text content of an DateTIme object represented by xml element objectElem\n // the same function used to get Text object content\n\n @private\n @param {Element} objectElem\n */\nLabel.prototype._getDateTimeCounterObjectText = function (objectElem) {\n  let result = '';\n\n  if (!this.isDCDLabel()) {\n    result = xml.getElementText(xml.getElement(objectElem, 'PreText'));\n  } else {\n    const FormattedText = xml.getElement(objectElem, 'FormattedText');\n    const LineTextSpans = xml.getElements(FormattedText, 'LineTextSpan');\n    if (LineTextSpans) {\n      const Spans = xml.getElements(LineTextSpans[0], 'TextSpan');\n      const text = xml.getElement(Spans[0], 'Text');\n      result += xml.getElementText(text);\n    }\n  }\n  return result;\n};\n\n/**\n @inheritDoc\n */\nLabel.prototype.getObjectText = function (objectName) {\n  const objectElem = this._getObjectByNameElement(objectName);\n  const objectType = objectElem.tagName;\n  let result = '';\n\n  switch (objectType) {\n    case 'AddressObject':\n    case 'TextObject':\n      result = this._getAddressObjectText(objectElem);\n      break;\n    case 'BarcodeObject':\n      // TODO: Implement method to get barcode text\n      result = this._getBarcodeObjectText(objectElem); // xml.getElementText(xml.getElement(objectElem, \"Text\"));\n      break;\n    case 'ImageObject':\n      // if image is embedded return it (base64 png stream)\n      result = this._getImageObjectText(objectElem);\n      break;\n    case 'CircularTextObject':\n      result = this.isDCDLabel()\n        ? this._getAddressObjectText(objectElem)\n        : xml.getElementText(xml.getElement(objectElem, 'Text'));\n      break;\n    case 'QRCodeObject':\n      result = this._getQRcodeObjectText(objectElem);\n      break;\n    case 'DateTimeObject':\n    case 'CounterObject':\n      // TODO: probably we want to reimplement objects' behaviour and return\n      // full text as rendered on a label\n      result = this._getDateTimeCounterObjectText(objectElem);\n      break;\n  }\n\n  return result; // default\n};\n\n/** returns line-by-line attributes (as xml Element) of the StyledText\n @private\n @param {Node} styledTextElem\n @return {Array.<Element>}\n */\nLabel.prototype._getStyledTextLineAttributes = function (styledTextElem) {\n  const result = [];\n  const elems = xml.getElements(styledTextElem, 'Element');\n  let isNewLine = true;\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n    const str = xml.getElementText(xml.getElement(elem, 'String'));\n    if (!str || !str.length)\n      // should not be, just a safeguard\n      continue;\n\n    const lines = str.split('\\n');\n    const linesCount = lines.length;\n\n    // no line separator in the middle of the line - ignore\n    if (linesCount == 1 && !isNewLine) continue;\n\n    // if (i > 0)\n    //    linesCount--; // don't count the 'first' line of second, and further element because it is a continuation of the line of the previous element\n\n    let l = 0;\n    if (!isNewLine) l = 1;\n\n    const attributesElem = xml.getElement(elem, 'Attributes');\n    for (; l < linesCount - 1; l++) result.push(attributesElem);\n\n    // if the last line is not empty - add it as well\n    if (lines[linesCount - 1].length > 0) {\n      result.push(attributesElem);\n      isNewLine = false;\n    } else {\n      isNewLine = true;\n    }\n  }\n\n  return result;\n};\n\n/*\nLabel.prototype._getStyledTextLineAttributes = function(styledTextElem)\n{\n    let result = new Array();\n    let elems = xml.getElements(styledTextElem, \"Element\");\n    for (let i = 0; i < elems.length; i++)\n    {\n        let elem = elems[i];\n        let lines = xml.getElementText(xml.getElement(elem, \"String\")).split(\"\\n\");\n\n        let linesCount = lines.length;\n        if (i > 0)\n            linesCount--; // don't count the 'first' line of second, and further element because it is a continuation of the line of the previous element\n\n        let attributesElem = xml.getElement(elem, \"Attributes\");\n        for (let l = 0; l < linesCount; l++)\n            result.push(attributesElem);\n    }\n\n    return result;\n}\n*/\n\n/** sets content for an Address object\n // Parameters:\n //      objectElem - Element corresponded to the address object\n //      text - plain text string of the address data\n // Note: text formatting is applied on line-by-line basis using object's <LineFonts> list\n\n @private\n @param {Element} objectElem\n @param {string} text\n @return {Label}\n */\nLabel.prototype._setAddressObjectText = function (objectElem, text) {\n  if (!this.isDCDLabel()) {\n    // get <StyledText>\n    const styledTextElem = xml.getElement(objectElem, 'StyledText');\n    const attributes = this._getStyledTextLineAttributes(styledTextElem);\n\n    // let lineFonts = xml.getNodes(objectElem, \"LineFonts/Font\");\n    const lineFontsElem = xml.getElement(objectElem, 'LineFonts');\n    let lineFonts = [];\n    if (lineFontsElem) lineFonts = xml.getElements(lineFontsElem, 'Font');\n\n    let defaultFont;\n    if (lineFonts.length == 0)\n      defaultFont = xml.parse(\n        '<Font Family=\"Arial\" Size=\"12\" Bold=\"False\" Italic=\"False\" Underline=\"False\" Strikeout=\"False\" />',\n      ).documentElement;\n    const defaultColor = xml.parse(\n      '<ForeColor Alpha=\"255\" Red=\"0\" Green=\"0\" Blue=\"0\" />',\n    ).documentElement;\n\n    // clear all text\n    xml.removeAllChildren(styledTextElem);\n\n    const lines = text.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n      let line = lines[i].replace('\\r', '');\n      if (i < lines.length - 1) line += '\\n';\n\n      // use font from lineFonts or the last font.\n      // If there is no lineFonts, try to use font from current styled text\n      let font = defaultFont;\n      if (lineFonts.length > 0) {\n        if (i < lineFonts.length) font = lineFonts[i];\n        else font = lineFonts[lineFonts.length - 1];\n      } else if (attributes.length > 0) {\n        if (i < attributes.length) font = xml.getElement(attributes[i], 'Font');\n        else font = xml.getElement(attributes[attributes.length - 1], 'Font');\n      }\n\n      // font color\n      let fontColor = defaultColor;\n      // alert(Xml.serialize(fontColor));\n      if (i < attributes.length) fontColor = xml.getElement(attributes[i], 'ForeColor');\n      // alert(Xml.serialize(fontColor));\n      // create styledText element for the line\n      const elemElem = styledTextElem.ownerDocument.createElement('Element');\n      const stringElem = styledTextElem.ownerDocument.createElement('String');\n      xml.setElementText(stringElem, line);\n      const attributesElem = styledTextElem.ownerDocument.createElement('Attributes');\n      attributesElem.appendChild(font.cloneNode(true));\n      attributesElem.appendChild(fontColor.cloneNode(true));\n      elemElem.appendChild(stringElem);\n      elemElem.appendChild(attributesElem);\n      styledTextElem.appendChild(elemElem);\n    }\n    // alert(Xml.serialize(styledTextElem));\n  } else {\n    const FormattedText = xml.getElement(objectElem, 'FormattedText');\n    const LineTextSpans = xml.getElements(FormattedText, 'LineTextSpan');\n    if (LineTextSpans) {\n      const Spans = xml.getElements(LineTextSpans[0], 'TextSpan');\n      if (Spans) {\n        const textElem = xml.getElement(Spans[0], 'Text');\n        xml.setElementText(textElem, text);\n      }\n    }\n  }\n\n  return this;\n};\n\n/** sets content for an QRCode object\n // Parameters:\n //      objectElem - Element corresponded to the address object\n //      text - plain text string of the address data\n // Note: text formatting is applied on line-by-line basis using object's <LineFonts> list\n\n @private\n @param {Element} objectElem\n @param {string} text\n @return {Label}\n */\nLabel.prototype._setQRCodeObjectText = function (objectElem, text) {\n  if (this.isDCDLabel()) {\n    const dataElem = xml.getElement(objectElem, 'Data');\n    if (dataElem) {\n      const dataStringElem = xml.getElement(dataElem, 'DataString');\n      xml.setElementText(dataStringElem, text);\n    }\n  }\n  return this;\n};\n\n/** sets content for a Barcode object\n // Parameters:\n //      objectElem - Element corresponded to the address object\n //      text - plain text string of the address data\n // Note: text formatting is applied on line-by-line basis using object's <LineFonts> list\n\n @private\n @param {Element} objectElem\n @param {string} text\n @return {Label}\n */\nLabel.prototype._setBarcodeObjectText = function (objectElem, text) {\n  const nodeName = this.isDCDLabel() ? 'Data' : 'Text';\n  const nodeElem = xml.getElement(objectElem, nodeName);\n\n  if (nodeElem) xml.setElementText(nodeElem, text);\n\n  return this;\n};\n\n/** sets content for a Barcode object\n // Parameters:\n //      objectElem - Element corresponded to the address object\n //      text - plain text string of the address data\n // Note: text formatting is applied on line-by-line basis using object's <LineFonts> list\n\n @private\n @param {Element} objectElem\n @param {string} text\n @return {Label}\n */\nLabel.prototype._setImageObjectText = function (objectElem, text) {\n  if (!this.isDCDLabel()) {\n    let imageElem = xml.getElement(objectElem, 'Image');\n    if (imageElem) xml.setElementText(imageElem, text);\n    else {\n      // if there is no <Image> tag then there should be <ImageLocation>\n      // so replace <ImageLocation> with <Image>\n      const imageLocationElem = xml.getElement(objectElem, 'ImageLocation');\n      if (!imageLocationElem)\n        throw new Error(\n          `setObjectText(): <ImageLocation> is expected but not found: ${xml.serialize(imageElem)}`,\n        );\n\n      // create <Image> elem\n      imageElem = imageLocationElem.ownerDocument.createElement('Image');\n      xml.setElementText(imageElem, text);\n      objectElem.replaceChild(imageElem, imageLocationElem);\n    }\n  } else {\n    const nodeElem = xml.getElement(objectElem, 'Data');\n    if (nodeElem) xml.setElementText(nodeElem, text);\n  }\n\n  return this;\n};\n\n/** sets content for an DateTime or Counter object\n // Parameters:\n //      objectElem - Element corresponded to the address object\n //      text - plain text string of the address data\n // Note: text formatting is applied on line-by-line basis using object's <LineFonts> list\n\n @private\n @param {Element} objectElem\n @param {string} text\n @return {Label}\n */\nLabel.prototype._setDateTimeCounterObjectText = function (objectElem, text) {\n  if (!this.isDCDLabel()) {\n    xml.setElementText(xml.getElement(objectElem, 'PreText'), text);\n  } else {\n    const FormattedText = xml.getElement(objectElem, 'FormattedText');\n    const LineTextSpans = xml.getElements(FormattedText, 'LineTextSpan');\n    if (LineTextSpans) {\n      const Spans = xml.getElements(LineTextSpans[0], 'TextSpan');\n      const textElem = xml.getElement(Spans[0], 'Text');\n      xml.setElementText(textElem, text);\n    }\n  }\n\n  return this;\n};\n/**\n @inheritDoc\n */\nLabel.prototype.setObjectText = function (objectName, text) {\n  const objectElem = this._getObjectByNameElement(objectName);\n  const objectType = objectElem.tagName;\n\n  switch (objectType) {\n    case 'AddressObject':\n      this._setAddressObjectText(objectElem, text);\n      break;\n\n    case 'TextObject':\n      this._setAddressObjectText(objectElem, text);\n      break;\n\n    case 'QRCodeObject':\n      this._setQRCodeObjectText(objectElem, text);\n      break;\n\n    case 'BarcodeObject':\n      this._setBarcodeObjectText(objectElem, text);\n      break;\n\n    case 'ImageObject':\n      this._setImageObjectText(objectElem, text);\n      break;\n\n    case 'CircularTextObject':\n      this.isDCDLabel()\n        ? this._setAddressObjectText(objectElem, text)\n        : xml.setElementText(xml.getElement(objectElem, 'Text'), text);\n      break;\n\n    case 'DateTimeObject':\n    case 'CounterObject':\n      this._setDateTimeCounterObjectText(objectElem, text);\n      break;\n  }\n\n  return this;\n};\n\n/**\n @inheritDoc\n */\nLabel.prototype.setLabelLength = function (newLength) {\n  const labelElm = this._doc.documentElement;\n  if (labelElm.nodeName != 'ContinuousLabel')\n    throw new Error('Cannot set length on non-continuous label.');\n\n  const lengthMode = newLength == 0 ? 'Auto' : 'Fixed';\n  const lengthValue = newLength == 0 ? 7200 : newLength;\n\n  xml.setElementText(xml.getElement(labelElm, 'LengthMode'), lengthMode);\n  xml.setElementText(xml.getElement(labelElm, 'LabelLength'), lengthValue);\n\n  const rootCellElm = xml.getElement(labelElm, 'RootCell');\n  xml.setElementText(xml.getElement(rootCellElm, 'Length'), lengthValue);\n  xml.setElementText(xml.getElement(rootCellElm, 'LengthMode'), lengthMode);\n\n  return this;\n};\n\n/**\n @override\n */\nLabel.prototype.toString = function () {\n  return this.getLabelXml();\n};\n\nexport default Label;\n","import { isNil } from 'lodash';\nimport { getSetting } from '../../../../settings';\nimport printLabelToNetworkPrinter from '../printLabelToNetworkPrinter';\n\n/** Prints a label\n // printerName - the printer to print on. A list of printers can be obtained by getPrinters()\n // printParamsXml - printing parameters, like number of copies, print quality, etc. See PrintParams.xsd\n // labelXml - label to print\n // labelSetXml - LabelSet to print. LabelSet is used to print multiple labels with same layout but different data, e.g. multiple addresses.\n //               Use LabelSetBuilder to create a LabelSet or construct xml manualy according to LabelSet.xsd\n\n @param {string} printerName\n @param {string} printParamsXml\n @param {string} labelXml\n @param {string} labelSetXml\n @return {undefined}\n @export\n */\n\nexport const printLabelAsync = function (printerName, printParamsXml, labelXml, labelSetXml) {\n  printParamsXml = printParamsXml || '';\n  labelSetXml = labelSetXml || '';\n  if (typeof labelSetXml !== 'string') labelSetXml = labelSetXml.toString();\n\n  if (typeof labelXml === 'undefined')\n    throw new Error('printLabelAsync(): labelXml parameter should be specified');\n\n  if (typeof labelXml !== 'string') labelXml = labelXml.toString();\n\n  return getPrintersAsync().then(function (printers) {\n    const printerInfo = printers[printerName];\n\n    if (!isNil(printerInfo)) {\n      if (getSetting('ASSUME_MOBILE') || printerInfo.isNetworkPrinter()) {\n        return printLabelToNetworkPrinter(printerInfo, printParamsXml, labelXml, labelSetXml);\n      }\n      return _createFramework().printLabelAsync(\n        printerInfo.name,\n        printParamsXml,\n        labelXml,\n        labelSetXml,\n      );\n    }\n    throw new Error(`printLabelAsync(): unknown printer '${printerName}'`);\n  });\n};\n\nexport default printLabelAsync;\n","/** Prints a label to a network/mobile printer\n\n @param {dymo.label.framework.PrinterInfo} printerInfo\n @param {string} printParamsXml\n @param {string} labelXml\n @param {string} labelSetXml\n @return {dymo.label.framework.PrintJob} jobId of the submitted printJob\n */\nimport uuid from '../../../uuid';\n\nfunction printLabelToNetworkPrinter(printerInfo, printParamsXml, labelXml, labelSetXml) {\n  // send print data\n  const jobId = uuid();\n\n  // use jsonp and pl verb\n\n  // create payload\n  const payload = {\n    printerName: printerInfo.originalPrinterName,\n    labelXml,\n    printParamsXml,\n    labelSetXml,\n  };\n  const uri = goog.Uri.resolve(printerInfo.printerUri, 'pl');\n\n  const payloadJson = goog.json.serialize(payload);\n  const CHUNK_SIZE = 4000;\n  const LAST_CHUNK_ID = -1;\n  const MAX_RETRY_COUNT = 10;\n  const STATUS_ACK = 0;\n  const STATUS_INVALID_CHUNK_ID = -5;\n\n  const sendOneChunk = function (chunkId, retryCount) {\n    const offset = chunkId * CHUNK_SIZE;\n\n    let chunk = '';\n    if (offset >= payloadJson.length) chunkId = LAST_CHUNK_ID;\n    else chunk = payloadJson.substr(offset, CHUNK_SIZE);\n\n    // send chunk\n    const jsonp = new goog.net.Jsonp(uri, 'c');\n\n    jsonp.send(\n      {\n        j: jobId,\n        cid: chunkId,\n        pl: chunk,\n      },\n      function (printLabelResult) {\n        // verify result\n        const { status } = printLabelResult;\n        const logger = new goog.debug.Logger('dymo.label.framework');\n        logger.setLevel(goog.debug.Logger.Level.INFO);\n        if (status == STATUS_ACK) {\n          // send next chunk if any\n          if (chunkId != LAST_CHUNK_ID) {\n            sendOneChunk(++chunkId, 0);\n          } else {\n            logger.info(`Finished sending job payload for ${jobId}`);\n          }\n        } else if (status == STATUS_INVALID_CHUNK_ID) {\n          // send last accepted chunk\n          if (retryCount < MAX_RETRY_COUNT)\n            sendOneChunk(++printLabelResult.lastAckChunkId, ++retryCount);\n          else\n            logger.warning(\n              `Unable to send print job data for \"${jobId}\": STATUS_INVALID_CHUNK_ID: Max retry count reached`,\n            );\n        } else {\n          // send current chunk\n          if (retryCount < MAX_RETRY_COUNT) sendOneChunk(chunkId, ++retryCount);\n          else\n            logger.warning(`Unable to send print job data for \"${jobId}\": Max retry count reached`);\n        }\n      },\n      function () {\n        const logger = new goog.debug.Logger('dymo.label.framework');\n        logger.setLevel(goog.debug.Logger.Level.INFO);\n        if (retryCount < MAX_RETRY_COUNT) sendOneChunk(chunkId, ++retryCount);\n        else\n          logger.warning(\n            `Unable to send print job data for \"${jobId}\": error: Max retry count reached`,\n          );\n      },\n    );\n  };\n\n  sendOneChunk(0, 0);\n\n  return new dymo.label.framework.PrintJob(printerInfo, jobId);\n}\n\nexport default printLabelToNetworkPrinter;\n","import PrinterInfo from '../PrinterInfo'\n\n/**\n @public\n @constructor\n @extends {PrinterInfo}\n @param {string} name\n @param {string} modelName\n @param {boolean} isConnected\n @param {boolean} isLocal\n @param {boolean} isAutoCutSupported\n */\n\nconst DZPrinterInfo = function (\n  name, modelName, isConnected, isLocal, isAutoCutSupported) {\n  PrinterInfo.call(this, 'DZPrinter', name, modelName, isConnected, isLocal)\n\n  this.isAutoCutSupported = isAutoCutSupported\n};\n\nexport default DZPrinterInfo\n","import { getSetting } from '../../../../settings'\nimport { createFramework } from '../createFramework'\nimport createPrintersCollection from '../createPrintersCollection'\nimport addNetworkPrintersToCollection from '../addNetworkPrintersToCollection'\nimport { getPrinters } from '../OneOffFunctions'\n\n/**\n @export\n */\nconst getPrintersAsync = function () {\n  if (getSetting('ASSUME_MOBILE')) {\n    const result = createPrintersCollection()\n    addNetworkPrintersToCollection(result)\n    return goog.Promise.resolve(result)\n  }\n\n  return createFramework().getPrintersAsync().then(function (printersXml) {\n    // get 'local' printers, if we can\n    try {\n      const result = getPrinters(printersXml)\n      addNetworkPrintersToCollection(result)\n      return result\n    } catch (e) {}\n    return null\n  })\n};\n\nexport default getPrintersAsync;\n","import { addPrinterToCollection, printers as _networkPrinters } from '../../../../settings';\n\n/**\n add network printers to printer collection\n @private\n @return {undefined}\n */\n\nconst addNetworkPrintersToCollection = (result) => {\n  // get network printers as well\n  // eslint-disable-next-line guard-for-in,no-restricted-syntax\n  for (const printerUri in _networkPrinters) {\n    const npi = _networkPrinters[printerUri].getPrinters();\n    // eslint-disable-next-line no-plusplus\n    for (let j = 0; j < npi.length; ++j) {\n      const networkPrinter = npi[j];\n\n      addPrinterToCollection(networkPrinter, result);\n    }\n  }\n};\n\nexport default addNetworkPrintersToCollection;\n","export const isString = (testString) => {\n  return typeof testString === 'string'\n}\n\nexport const appendUrlPath = (baseUri, path) => {\n  if (baseUri.endsWith('/')) {\n    baseUri = baseUri.substr(0, baseUri.length - 1)\n  }\n\n  if (path.startsWith('/')) {\n    path = path.substr(1)\n  }\n\n  return `${baseUri}/${path}`\n}\n\nexport const lowercaseFirstLetter = (theString) =>  {\n  return theString.charAt(0).toLowerCase() + theString.slice(1);\n}\n","/**\n @public\n @constructor\n @param {string} printerName\n @param {string} jobId\n @param {number} status\n @param {string} statusMessage\n */\nconst PrintJobStatusInfo = function (\n  printerName, jobId, status, statusMessage) {\n  this.printerName = printerName\n  this.jobId = jobId\n  this.status = status\n  this.statusMessage = statusMessage\n}\n\n/**\n Parses statusStr that contains status code abd status message separates by a space\n Returns an object with 'status' and 'statusMessage' properties\n @param {string} statusStr\n @return {{status: number, statusMessage: string}}\n */\nPrintJobStatusInfo.parse = function (statusStr) {\n  const result = {}\n  const a = statusStr.split(' ')\n\n  if (a.length >= 1) {\n    result.status = parseInt(a[0], 10)\n  }\n\n  result.statusMessage = a.slice(1).join(' ')\n\n  return result\n};\n\nexport default PrintJobStatusInfo\n","/** Specifies print job status\n @export\n */\nconst PrintJobStatus = {}\n// real job status (when a job has been successfully created on the host machine / network printer)\n\n/// Unknown/unexpected status, see statusMessage for more details\n/** @export */\nPrintJobStatus.Unknown = 0\n/** @export */\nPrintJobStatus.Printing = 1\n/** @export */\nPrintJobStatus.Finished = 2\n/** @export */\nPrintJobStatus.Error = 3\n/** @export */\nPrintJobStatus.PaperOut = 4\n/** @export */\nPrintJobStatus.InQueue = 5\n\n// surrogate statuses\n\n/** @export */\nPrintJobStatus.ProcessingError = -1\n/** @export */\nPrintJobStatus.PrinterBusy = -2\n/** @export */\nPrintJobStatus.InvalidJobId = -3\n/** @export */\nPrintJobStatus.NotSpooled = -4\n\nexport default PrintJobStatus\n","import { traceMsg } from '../../../../helpers/debug'\nimport { getSetting } from '../../../../settings'\nimport {\n  asyncFindWebService,\n  syncCheckWebService,\n} from '../../../../helpers/ajax'\n\n/**\n Checks is browser enviroment suitable for the framework\n @export\n */\nconst checkEnvironment = async function (\n  onEnvironmentCheckedCallback, checkWebService) {\n  const result = {\n    isBrowserSupported: false,\n    isFrameworkInstalled: false,\n    isWebServicePresent: false,\n    errorDetails: '',\n  }\n\n  const onWebServiceFound = async function () {\n    result.isBrowserSupported = true\n    result.isFrameworkInstalled = true\n    result.isWebServicePresent = true\n\n    onEnvironmentCheckedCallback &&\n    (await onEnvironmentCheckedCallback(result))\n  }\n\n  const onLegacyPluginFound = async function () {\n    result.isBrowserSupported = true\n    result.isFrameworkInstalled = true\n    result.isWebServicePresent = false\n\n    onEnvironmentCheckedCallback &&\n    (await onEnvironmentCheckedCallback(result))\n  }\n\n  const checkLegacyPlugins = function () {\n    traceMsg('checkLegacyPlugins')\n    result.isWebServicePresent = false\n    result.isBrowserSupported = true\n  };\n\n  const errorFindWebService = function (err) {\n    checkLegacyPlugins()\n    onEnvironmentCheckedCallback && onEnvironmentCheckedCallback(result)\n  }\n\n  if (getSetting('dymo.label.framework.currentFramework')) {\n    traceMsg('checkEnvironment > return existing instance of framework')\n    if (getSetting('dymo.label.framework.currentFramework') == 2) {\n      await onWebServiceFound()\n    } else {\n      await onLegacyPluginFound()\n    }\n\n    return result\n  }\n\n  if (checkWebService) {\n    await asyncFindWebService(onWebServiceFound, errorFindWebService)\n  } else {\n    await syncCheckWebService(onWebServiceFound, errorFindWebService)\n  }\n\n  return result;\n};\nexport default checkEnvironment;\n","/** Specifies how objects and object text are laid down on the label. For Middle East labels/content specify RightToLeft, otherwise \"LeftToRight\" (default)\n @enum {string}\n @export\n */\nconst FlowDirection = {}\n/** @export */\nFlowDirection.LeftToRight = 'LeftToRight'\n/** @export */\nFlowDirection.RightToLeft = 'RightToLeft'\n\nexport default FlowDirection\n","/** Specifies printing quality when printed on LabelWriter printers\n // 'Text' - text print quality (fast)\n // 'BarcodeAndGraphics' - barcode and images print quality (slow)\n // 'Auto' - automatically determines the print quality based on objects on the label\n @enum {string}\n @export\n */\nconst LabelWriterPrintQuality = {}\n/** @export */\nLabelWriterPrintQuality.Auto = 'Auto'\n/** @export */\nLabelWriterPrintQuality.Text = 'Text'\n/** @export */\nLabelWriterPrintQuality.BarcodeAndGraphics = 'BarcodeAndGraphics'\n\nexport default LabelWriterPrintQuality\n","/**\n @interface\n @public\n */\nconst ILabelSetRecord = function () {}\n\n/**\n // Adds data to the record specified as text markup\n // Parameters:\n //      objectName - object name which the markup is set for\n //      textMarkup - markup string\n\n @public\n @param {string} objectName\n @param {string} textMarkup\n @return {ILabelSetRecord}\n */\nILabelSetRecord.prototype.setTextMarkup = function (objectName, textMarkup) {};\n\n/**\n // Adds data to the record specified as plain text\n // Parameters:\n //      objectName - object name which the markup is set for\n //      text - text string\n\n @public\n @param {string} objectName\n @param {string} text\n @return {ILabelSetRecord}\n */\nILabelSetRecord.prototype.setText = function (objectName, text) {};\n\n/**\n // Adds image data to the record.\n // Parameters:\n //      objectName - object name which the markup is set for\n //      base64Image - string contains base64-encoded png image stream\n\n @public\n @param {string} objectName\n @param {string} base64Image\n @return {ILabelSetRecord}\n */\nILabelSetRecord.prototype.setBase64Image = function (\n  objectName, base64Image) {};\n\nexport default ILabelSetRecord\n","/**\n @public\n @interface\n */\nconst ILabel = function () {}\n\n/**\n Returns current label xml as a string\n the returned xmlcan be passed to functions accepts label xml as a parameter\n or can be used to direct content manipulations not currently supported by the Framework\n @public\n @return {string}\n */\nILabel.prototype.getLabelXml = function () {}\n\n/** Creates the label bitmap image can be used for label previewing. Similar to renderLabel()\n // Parameters:\n //      labelXml - label to preview\n //      renderParamsXml - rendering parameters, like shadow depth, label color, etc. See LabelRenderParams.xsd\n //      printerName - printer name the preview is generated for. Thhe preview/output cna be different on different printers,\n //                    especially on tape printers with different print head size.\n //                    An empty string can be passed if it does not matter or important on whitch printer the label will be printed.\n //                    In this case a default printer metrics will be used that is LW400 for LabelWriter printers and LW400 DUO Tape for tape printers\n // Returns base64-encoded string of rendered png label image\n\n @public\n @param {string} renderParamsXml\n @param {string} printerName\n @return {string}\n */\nILabel.prototype.render = function (renderParamsXml, printerName) {};\n\n/** Creates the label bitmap image can be used for label previewing. Similar to renderLabel()\n // Parameters:\n //      labelXml - label to preview\n //      renderParamsXml - rendering parameters, like shadow depth, label color, etc. See LabelRenderParams.xsd\n //      printerName - printer name the preview is generated for. Thhe preview/output cna be different on different printers,\n //                    especially on tape printers with different print head size.\n //                    An empty string can be passed if it does not matter or important on whitch printer the label will be printed.\n //                    In this case a default printer metrics will be used that is LW400 for LabelWriter printers and LW400 DUO Tape for tape printers\n // Returns base64-encoded string of rendered png label image\n\n @public\n @param {string} renderParamsXml\n @param {string} printerName\n @return {string}\n */\nILabel.prototype.renderAsync = function (renderParamsXml, printerName) {};\n\n/**\n // Prints the label. Similar to printLabel()\n // Parameters:\n //      printerName - the printer to print on. A list of printers can be obtained by getPrinters()\n //      printParamsXml - printing parameters, like number of copies, print quality, etc. See PrintParams.xsd\n //      labelSetXml - LabelSet to print. LabelSet is used to print multiple labels with same layout but different data, e.g. multiple addresses.\n //                    Use LabelSetBuilder to create a LabelSet or construct xml manualy according to LabelSet.xsd\n\n @public\n @param {string} printerName\n @param {string} printParamsXml\n @param {string} labelSetXml\n @return {void}\n\n */\nILabel.prototype.print = function (printerName, printParamsXml, labelSetXml) {};\n\n/**\n // Prints the label. Similar to printLabel()\n // Parameters:\n //      printerName - the printer to print on. A list of printers can be obtained by getPrinters()\n //      printParamsXml - printing parameters, like number of copies, print quality, etc. See PrintParams.xsd\n //      labelSetXml - LabelSet to print. LabelSet is used to print multiple labels with same layout but different data, e.g. multiple addresses.\n //                    Use LabelSetBuilder to create a LabelSet or construct xml manualy according to LabelSet.xsd\n\n @public\n @param {string} printerName\n @param {string} printParamsXml\n @param {string} labelSetXml\n @return {void}\n\n */\nILabel.prototype.printAsync = function (\n  printerName, printParamsXml, labelSetXml) {};\n\n/**\n // Prints the label. Similar to printLabel()\n // Parameters:\n //      printerName - the printer to print on. A list of printers can be obtained by getPrinters()\n //      printParamsXml - printing parameters, like number of copies, print quality, etc. See PrintParams.xsd\n //      labelSetXml - LabelSet to print. LabelSet is used to print multiple labels with same layout but different data, e.g. multiple addresses.\n //                    Use LabelSetBuilder to create a LabelSet or construct xml manualy according to LabelSet.xsd\n\n @public\n @param {string} printerName\n @param {string} printParamsXml\n @param {string} labelSetXml\n @return {PrintJob} print job\n\n */\nILabel.prototype.print2 = function (\n  printerName, printParamsXml, labelSetXml) {};\n\n/**\n // Prints the label. Similar to printLabel()\n // Parameters:\n //      printerName - the printer to print on. A list of printers can be obtained by getPrinters()\n //      printParamsXml - printing parameters, like number of copies, print quality, etc. See PrintParams.xsd\n //      labelSetXml - LabelSet to print. LabelSet is used to print multiple labels with same layout but different data, e.g. multiple addresses.\n //                    Use LabelSetBuilder to create a LabelSet or construct xml manualy according to LabelSet.xsd\n\n @public\n @param {string} printerName\n @param {string} printParamsXml\n @param {string} labelSetXml\n @return {goog.Promise} print job\n\n */\nILabel.prototype.print2Async = function (\n  printerName, printParamsXml, labelSetXml) {};\n\n/** Prints a label and runs status checking in a loop\n\n @public\n @param {string} printerName the printer to print on. A list of printers can be obtained by getPrinters()\n @param {string} printParamsXml printing parameters, like number of copies, print quality, etc. See PrintParams.xsd\n @param {string} labelSetXml\n LabelSet to print. LabelSet is used to print multiple labels with same layout but different data, e.g. multiple addresses.\n Use LabelSetBuilder to create a LabelSet or construct xml manualy according to LabelSet.xsd\n @param {function(PrintJob, PrintJobStatusInfo): boolean} statusCallback\n Function to be called when a print job status is available.\n The function is called with one argument of type PrintJobStatusInfo\n To continue polling the status the function should return true, false otherwise\n @param {number} pollInterval poll interval in milliseconds\n @return {PrintJob} print job\n */\nILabel.prototype.printAndPollStatus = function (\n  printerName,\n  printParamsXml,\n  labelSetXml,\n  statusCallback,\n  pollInterval,\n) {};\n\n/** Prints a label and runs status checking in a loop\n\n @public\n @param {string} printerName the printer to print on. A list of printers can be obtained by getPrinters()\n @param {string} printParamsXml printing parameters, like number of copies, print quality, etc. See PrintParams.xsd\n @param {string} labelSetXml\n LabelSet to print. LabelSet is used to print multiple labels with same layout but different data, e.g. multiple addresses.\n Use LabelSetBuilder to create a LabelSet or construct xml manualy according to LabelSet.xsd\n @param {function(PrintJob, PrintJobStatusInfo): boolean} statusCallback\n Function to be called when a print job status is available.\n The function is called with one argument of type PrintJobStatusInfo\n To continue polling the status the function should return true, false otherwise\n @param {number} pollInterval poll interval in milliseconds\n @return {goog.Promise}\n */\nILabel.prototype.printAndPollStatusAsync = function (\n  printerName,\n  printParamsXml,\n  labelSetXml,\n  statusCallback,\n  pollInterval,\n) {};\n\n/**\n returns an array of object names on the label\n @public\n @return {Array.<string>}\n */\nILabel.prototype.getObjectNames = function () {}\n\n/**\n returns the number of address objects on the label\n @public\n @return {number}\n */\nILabel.prototype.getAddressObjectCount = function () {}\n\n/** Returns IntellegentMail barcode position for an Address object\n // Parameters:\n //      addressIndex - zero-based index of the address object in 'virtual' array of all address objects on the label\n // Returns Element object of the corresponed address object\n\n @public\n @param {number} addressIndex\n @return {AddressBarcodePosition}\n */\nILabel.prototype.getAddressBarcodePosition = function (addressIndex) {}\n\n/** Set IntelegentMail barcode position for an Address object\n // Parameters:\n //      addressIndex - zero-based index of the address object in 'virtual' array of all address objects on the label\n //      bacodePosition - one of barcode position defined in AddressBarcodePosition\n // Returns Element object of the corresponed address object\n\n @public\n @param {number} addressIndex\n @param {AddressBarcodePosition|string} barcodePosition\n @return {ILabel}\n */\nILabel.prototype.setAddressBarcodePosition = function (\n  addressIndex, barcodePosition) {};\n\n/** Returns text content of an Address object\n // Parameters:\n //      addressIndex - zero-based index of the address object in 'virtual' array of all address objects on the label\n // Returns string contained plain text from the Address object\n\n @public\n @param {number} addressIndex\n @return {string}\n */\nILabel.prototype.getAddressText = function (addressIndex) {}\n\n/** Set text content of an Address object\n // Parameters:\n //      addressIndex - zero-based index of the address object in 'virtual' array of all address objects on the label\n //      text - plain text string contain the content. Note: current text formatting is remained on line-by-line basis\n\n @public\n @param {number} addressIndex\n @param {string} text\n @return {ILabel}\n */\nILabel.prototype.setAddressText = function (addressIndex, text) {}\n\n/** Get label type\n // Parameters:\n //\n //\n\n @public\n @return {boolean}\n */\nILabel.prototype.isDCDLabel = function () {}\n\nILabel.prototype.isDLSLabel = function () {}\n\nILabel.prototype.isValidLabel = function () {}\n\n/** Returns 'text' content of an object\n // The content depends on object type:\n //  - for Address and Text objects it is object's text without formatting\n //  - for Barcode object it is barcode string\n //  - for Image it is base64-encoded string on image's png stream (only if image data is embedded with the label, not linked to url/file)\n //  - for CircularText it is object's text\n //  - for other objects an empty string is returned\n\n @public\n @param {string} objectName\n @return {string}\n */\nILabel.prototype.getObjectText = function (objectName) {};\n\n/** sets text content for an object. Depends on object's type the content and/or text formatitng are set differently:\n //  - for Address the formatting is applied on line-by-line basis using <LineFonts> list\n //  - for text the formatting of current first character is used for the whole text\n //  - for Barcode object it is barcode string\n //  - for Image it is base64-encoded string of image's png stream\n //  - for CircularText it is object's text\n //  - for DateTime and Counter object it is object's PreText\n //  - for other objects an empty string is returned\n // Parameters:\n //      objectName - object name\n //      text - plain text string for new object content\n\n @public\n @param {string} objectName\n @param {string} text\n @return {ILabel}\n */\nILabel.prototype.setObjectText = function (objectName, text) {};\n\n/** sets length of the continuous label in units of the label (that is, if label units are twips, the length will be assumed as twips value as well)\n // Parameters:\n //      newLength - object name\n\n @public\n @param {number} newLength\n @return {ILabel}\n */\nILabel.prototype.setLabelLength = function (newLength) {}\n\nexport default ILabel\n","// TODO :: complete\n","/** Specifies tape's leader and trailer on a label when printing on Tape printer\n // Center - 10mm leader and trailer\n // Left - 6mm leader, 10mm trailer\n // Right - 10mm leader, 6mm trailer\n @enum {string}\n @export\n */\nconst TapeAlignment = {}\n/** @export */\nTapeAlignment.Center = 'Center'\n/** @export */\nTapeAlignment.Left = 'Left'\n/** @export */\nTapeAlignment.Right = 'Right'\n\nexport default TapeAlignment\n","/** Specifies on whitch roll to print when printing on Twin Turbo printers\n // Left - print on left roll only\n // Right - print on right roll only\n // Auto - continue printing on a different roll when current roll is out of paper. Note: it does not guarantee on whitch roll it will start printing. it can be both left or right.\n @enum {string}\n @export\n */\nconst TwinTurboRoll = {}\n/** @export */\nTwinTurboRoll.Auto = 'Auto'\n/** @export */\nTwinTurboRoll.Left = 'Left'\n/** @export */\nTwinTurboRoll.Right = 'Right'\n\nexport default TwinTurboRoll\n","/**\n @constructor\n @private\n @param {Object} result\n */\nconst CheckEnvironmentResult = function (result) {\n  this.isWebServicePresent = result.isWebServicePresent\n  this.isBrowserSupported = result.isBrowserSupported\n  this.isFrameworkInstalled = result.isFrameworkInstalled\n  this.errorDetails = result.errorDetails\n}\n\nexport default CheckEnvironmentResult\n","import xml from '../../../xml';\n\n/** Creates an xml stream suatable to pass to printLabel() function as printParamsXml parameter\n // Created printing parameters are for printing on LabelWriter printers\n // Parameters:\n // - params - an JavaScript object with following properties (not all properties have to be defined, if a property is not defined a default value will be used)\n //      params.copies - number of copies to print\n //      params.jobTitle - print job title/description\n //      params.flowDirection - prints label content as left-to-right or right-to-left use FlowDirection enum to specify values\n //      params.printQuality - printing quality, one of 'Text', 'BarcodeAndGraphics', or 'Auto'\n //      params.twinTurboRoll - the roll to print on if the printer is TwinTurbo. One of 'Left\", 'Right', or 'Auto'\n\n @param {LabelWriterPrintParams} params\n @return {string}\n @export\n */\nconst createLabelWriterPrintParamsXml = function (params) {\n  if (!params) return '';\n\n  const doc = xml.parse('<LabelWriterPrintParams/>');\n  const root = doc.documentElement;\n\n  if (params.copies) xml.appendElement(root, 'Copies', params.copies.toString());\n\n  if (params.jobTitle) xml.appendElement(root, 'JobTitle', params.jobTitle);\n\n  if (params.flowDirection) xml.appendElement(root, 'FlowDirection', params.flowDirection);\n\n  if (params.printQuality) xml.appendElement(root, 'PrintQuality', params.printQuality);\n\n  if (params.twinTurboRoll) xml.appendElement(root, 'TwinTurboRoll', params.twinTurboRoll);\n\n  // let result = Xml.serialize(doc);\n  // alert(result);\n  // return result;\n\n  return xml.serialize(doc);\n};\n\nexport default createLabelWriterPrintParamsXml;\n","//----------------------------------------------------------------------------\n//\n//  $Id: NetworkPrinter.js 15739 2011-08-11 15:56:29Z vbuzuev $\n//\n// Project -------------------------------------------------------------------\n//\n//  DYMO Label Framework JavaScript Library\n//\n// Content -------------------------------------------------------------------\n//\n//  PrintJob class\n//\n//----------------------------------------------------------------------------\n//\n//  Copyright (c), 2010, Sanford, L.P. All Rights Reserved.\n//\n//----------------------------------------------------------------------------\n\n/**\n Contains a pair of printer uri and printer' local name\n @constructor\n\n @param {string} printerUri\n @param {string} printerName\n */\nconst NetworkPrinterName = function (printerUri, printerName) {\n  this.printerUri = printerUri;\n  this.printerName = printerName;\n};\n\n/** Determines is the printer local or network\n Local means installed as a Printer on the Desktop machine\n where JavaScript is executing, e.g. it is a printer available as 'printer' on Windows machine\n 'Network' means a printer installed on a 'proxy' machine or a real network printer (in the future)\n\n @param {string} printerName\n @return {boolean}\n */\nNetworkPrinterName.isNetworkPrinter = function (printerName) {\n  // a network printer should have a valid uri with 'dymo' as the uri's scheme\n  const printerUri = new goog.Uri(printerName);\n  return printerUri.hasScheme() && printerUri.hasDomain() && printerUri.hasPath();\n};\n\n/** Splits network printer name into two parts, the printer's uri and a\n 'local' printer name\n\n @param {string} networkPrinterName\n @return {NetworkPrinterName}\n */\nNetworkPrinterName.splitNetworkPrinterName = function (networkPrinterName) {\n  const uri = new goog.Uri(networkPrinterName);\n  let printerName = uri.getPath();\n  if (printerName.length > 1 && printerName.charAt(0) == '/') printerName = printerName.slice(1);\n\n  uri.setPath('');\n\n  return new NetworkPrinterName(uri.toString(), printerName);\n};\n\nexport default NetworkPrinterName;\n","/** returns true/false that the 550 Printer is running and connected or not\n Params:\n - printerName - printer's name (print queue name on Mac)\n\n @param {string} printerName\n @return {boolean}\n @export\n */\nimport { createFramework } from '../createFramework'\n\nexport const is550Printer = function (printerName) {\n  let result = false;\n  try {\n    result = createFramework().is550Printer(printerName)\n  } catch (e) {}\n  return result;\n};\n\nexport const is550PrinterAsync = function (printerName) {\n  return createFramework().\n    is550PrinterAsync(printerName).\n    then(function (resultData) {\n      return resultData\n    })\n};\n\n/** returns a json format that a consumable information in 550 printer such as consumable name, labels remaining and roll status.\n Params:\n - printerName - printer's name (print queue name on Mac)\n\n @param {string} printerName\n @return {string}\n @export\n */\nexport const getConsumableInfoIn550Printer = function (printerName) {\n  let result = '';\n  try {\n    result = createFramework().getConsumableInfoIn550Printer(printerName)\n  } catch (e) {}\n  return result;\n};\n\nexport const getConsumableInfoIn550PrinterAsync = function (printerName) {\n  return createFramework().\n    getConsumableInfoIn550PrinterAsync(printerName).\n    then(function (resultData) {\n      return resultData\n    })\n};\n","import { setSetting } from './settings'\nimport { createFramework as initFramework } from './dymo/label/framework/createFramework'\n\n/**\n *\n * @param config\n * @param callback\n * @return {Promise<undefined>|_createFramework}\n */\nexport const initApp = (config = {}, callback) => {\n  Object.keys(config).forEach((key) => {\n    setSetting(key, config[key])\n  })\n\n  return initFramework(callback)\n}\n\nconst dymoJsSdk = initApp()\n\nexport const createFramework = initFramework;\nexport const sampleSingleLabel = require('./dymo/label/framework/createFramework/__tests__/data/singleLabel').sampleSingleLabel;\nexport const LabelSetBuilder = require('./dymo/label/framework/LabelSetBuilder').default;\n\nexport default dymoJsSdk\n"],"names":[],"version":3,"file":"dymo-js-sdk.js.map","sourceRoot":"../"}